node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond"
  op: "If"
  input: "global_step/VarIsInitializedOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "global_step_cond_false_7120"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "global_step_cond_true_7119"
      }
    }
  }
}
node {
  name: "global_step/cond/Identity"
  op: "Identity"
  input: "global_step/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "AddV2"
  input: "global_step/cond/Identity"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "normalize_element/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 100
          }
        }
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00000"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00001"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00002"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00003"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00004"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00005"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00006"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00007"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00008"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00009"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00010"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00011"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00012"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00013"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00014"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00015"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00016"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00017"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00018"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00019"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00020"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00021"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00022"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00023"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00024"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00025"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00026"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00027"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00028"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00029"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00030"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00031"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00032"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00033"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00034"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00035"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00036"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00037"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00038"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00039"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00040"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00041"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00042"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00043"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00044"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00045"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00046"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00047"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00048"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00049"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00050"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00051"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00052"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00053"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00054"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00055"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00056"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00057"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00058"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00059"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00060"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00061"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00062"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00063"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00064"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00065"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00066"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00067"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00068"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00069"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00070"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00071"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00072"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00073"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00074"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00075"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00076"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00077"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00078"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00079"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00080"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00081"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00082"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00083"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00084"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00085"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00086"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00087"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00088"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00089"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00090"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00091"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00092"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00093"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00094"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00095"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00096"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00097"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00098"
        string_val: "D:\\luckma\\data\\processed\\train\\price\\bn\\05-21-20\\adx.tfrecords\\part-r-00099"
      }
    }
  }
}
node {
  name: "TensorSliceDataset"
  op: "TensorSliceDataset"
  input: "normalize_element/component_0"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cycle_length"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "block_length"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "ParallelInterleaveDatasetV2"
  op: "ParallelInterleaveDatasetV2"
  input: "TensorSliceDataset"
  input: "cycle_length"
  input: "block_length"
  input: "num_parallel_calls"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_interleave_lambda_7205"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "sloppy"
    value {
      b: false
    }
  }
}
node {
  name: "filename"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "CacheDataset"
  op: "CacheDataset"
  input: "ParallelInterleaveDatasetV2"
  input: "filename"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 4508
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "CacheDataset"
  input: "buffer_size"
  input: "seed"
  input: "seed2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "ShuffleDataset"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "BatchDatasetV2"
  op: "BatchDatasetV2"
  input: "RepeatDataset"
  input: "batch_size"
  input: "drop_remainder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "parallel_copy"
    value {
      b: false
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "PrefetchDataset"
  op: "PrefetchDataset"
  input: "BatchDatasetV2"
  input: "buffer_size_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "legacy_autotune"
    value {
      b: true
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
}
node {
  name: "optimizations"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3
          }
        }
        string_val: "map_and_batch_fusion"
        string_val: "noop_elimination"
        string_val: "shuffle_and_repeat_fusion"
      }
    }
  }
}
node {
  name: "OptimizeDataset"
  op: "OptimizeDataset"
  input: "PrefetchDataset"
  input: "optimizations"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "optimization_configs"
    value {
      list {
        s: "map_vectorization:use_choose_fastest:false"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "ModelDataset"
  op: "ModelDataset"
  input: "OptimizeDataset"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "algorithm"
    value {
      i: 0
    }
  }
  attr {
    key: "cpu_budget"
    value {
      i: 0
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "IteratorV2"
  op: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MakeIterator"
  op: "MakeIterator"
  input: "ModelDataset"
  input: "IteratorV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@IteratorV2"
      }
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "IteratorV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "DeserializeSparse"
  op: "DeserializeSparse"
  input: "IteratorGetNext"
  attr {
    key: "Tserialized"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "unstack"
  op: "Unpack"
  input: "DeserializeSparse:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "stack"
  op: "Pack"
  input: "Const"
  input: "unstack:1"
  input: "unstack:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "DeserializeSparse_1"
  op: "DeserializeSparse"
  input: "IteratorGetNext:1"
  attr {
    key: "Tserialized"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "unstack_1"
  op: "Unpack"
  input: "DeserializeSparse_1:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "stack_1"
  op: "Pack"
  input: "Const_1"
  input: "unstack_1:1"
  input: "unstack_1:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "DeserializeSparse_2"
  op: "DeserializeSparse"
  input: "IteratorGetNext:2"
  attr {
    key: "Tserialized"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "unstack_2"
  op: "Unpack"
  input: "DeserializeSparse_2:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "stack_2"
  op: "Pack"
  input: "Const_2"
  input: "unstack_2:1"
  input: "unstack_2:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "DeserializeSparse_3"
  op: "DeserializeSparse"
  input: "IteratorGetNext:3"
  attr {
    key: "Tserialized"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "unstack_3"
  op: "Unpack"
  input: "DeserializeSparse_3:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "stack_3"
  op: "Pack"
  input: "Const_3"
  input: "unstack_3:1"
  input: "unstack_3:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "DeserializeSparse_4"
  op: "DeserializeSparse"
  input: "IteratorGetNext:4"
  attr {
    key: "Tserialized"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "unstack_4"
  op: "Unpack"
  input: "DeserializeSparse_4:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "stack_4"
  op: "Pack"
  input: "Const_4"
  input: "unstack_4:1"
  input: "unstack_4:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "DeserializeSparse_5"
  op: "DeserializeSparse"
  input: "IteratorGetNext:5"
  attr {
    key: "Tserialized"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "unstack_5"
  op: "Unpack"
  input: "DeserializeSparse_5:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "stack_5"
  op: "Pack"
  input: "Const_5"
  input: "unstack_5:1"
  input: "unstack_5:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "DeserializeSparse_6"
  op: "DeserializeSparse"
  input: "IteratorGetNext:6"
  attr {
    key: "Tserialized"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "unstack_6"
  op: "Unpack"
  input: "DeserializeSparse_6:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "stack_6"
  op: "Pack"
  input: "Const_6"
  input: "unstack_6:1"
  input: "unstack_6:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/SparseToDense"
  op: "SparseToDense"
  input: "DeserializeSparse"
  input: "stack"
  input: "DeserializeSparse:1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/SparseToDense"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/concat/values_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/concat"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/concat/values_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/concat/values_2"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Reshape"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/SparseToDense"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice"
  op: "StridedSlice"
  input: "DeserializeSparse"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_1"
  op: "StridedSlice"
  input: "DeserializeSparse"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/ones_like/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/ones_like"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/ones_like/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/add"
  op: "AddV2"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/ones_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/SegmentMax"
  op: "SegmentMax"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/add"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/truediv/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/SegmentMax"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/truediv/Cast_1"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/truediv/y"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/truediv"
  op: "RealDiv"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/truediv/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/truediv/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/Ceil"
  op: "Ceil"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/truediv"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/Ceil"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/Shape/Cast"
  op: "Cast"
  input: "stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/Shape/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_3"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_3/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_3/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/sub"
  op: "Sub"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/zeros"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/sub"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/zeros"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_1"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Reshape_1/shape"
  op: "Pack"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Reshape_1"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/SparseToDense"
  op: "SparseToDense"
  input: "DeserializeSparse_1"
  input: "stack_1"
  input: "DeserializeSparse_1:1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/SparseToDense"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/concat/values_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/concat"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/concat/values_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/concat/values_2"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Reshape"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/SparseToDense"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice"
  op: "StridedSlice"
  input: "DeserializeSparse_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_1"
  op: "StridedSlice"
  input: "DeserializeSparse_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/ones_like/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/ones_like"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/ones_like/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/add"
  op: "AddV2"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/ones_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/SegmentMax"
  op: "SegmentMax"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/add"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/truediv/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/SegmentMax"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/truediv/Cast_1"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/truediv/y"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/truediv"
  op: "RealDiv"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/truediv/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/truediv/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/Ceil"
  op: "Ceil"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/truediv"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/Ceil"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/Shape/Cast"
  op: "Cast"
  input: "stack_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/Shape/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_3"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_3/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_3/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/sub"
  op: "Sub"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/zeros"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/sub"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/zeros"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_1"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Reshape_1/shape"
  op: "Pack"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Reshape_1"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/SparseToDense"
  op: "SparseToDense"
  input: "DeserializeSparse_2"
  input: "stack_2"
  input: "DeserializeSparse_2:1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/SparseToDense"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/concat/values_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/concat"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/concat/values_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/concat/values_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Reshape"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/SparseToDense"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice"
  op: "StridedSlice"
  input: "DeserializeSparse_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_1"
  op: "StridedSlice"
  input: "DeserializeSparse_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/ones_like/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/ones_like"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/ones_like/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/add"
  op: "AddV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/ones_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/SegmentMax"
  op: "SegmentMax"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/add"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/truediv/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/SegmentMax"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/truediv/Cast_1"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/truediv/y"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/truediv"
  op: "RealDiv"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/truediv/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/truediv/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/Ceil"
  op: "Ceil"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/truediv"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/Ceil"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/Shape/Cast"
  op: "Cast"
  input: "stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/Shape/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_3"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_3/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_3/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/sub"
  op: "Sub"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/zeros"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/sub"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/zeros"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_1"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Reshape_1/shape"
  op: "Pack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Reshape_1"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/SparseToDense"
  op: "SparseToDense"
  input: "DeserializeSparse_3"
  input: "stack_3"
  input: "DeserializeSparse_3:1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/SparseToDense"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/concat/values_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/concat"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/concat/values_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/concat/values_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Reshape"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/SparseToDense"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice"
  op: "StridedSlice"
  input: "DeserializeSparse_3"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_1"
  op: "StridedSlice"
  input: "DeserializeSparse_3"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/ones_like/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/ones_like"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/ones_like/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/add"
  op: "AddV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/ones_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/SegmentMax"
  op: "SegmentMax"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/add"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/truediv/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/SegmentMax"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/truediv/Cast_1"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/truediv/y"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/truediv"
  op: "RealDiv"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/truediv/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/truediv/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/Ceil"
  op: "Ceil"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/truediv"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/Ceil"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/Shape/Cast"
  op: "Cast"
  input: "stack_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/Shape/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_3"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_3/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_3/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/sub"
  op: "Sub"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/zeros"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/sub"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/zeros"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_1"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Reshape_1/shape"
  op: "Pack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Reshape_1"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/SparseToDense"
  op: "SparseToDense"
  input: "DeserializeSparse_4"
  input: "stack_4"
  input: "DeserializeSparse_4:1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/SparseToDense"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/concat/values_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/concat"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/concat/values_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/concat/values_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Reshape"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/SparseToDense"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice"
  op: "StridedSlice"
  input: "DeserializeSparse_4"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_1"
  op: "StridedSlice"
  input: "DeserializeSparse_4"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/ones_like/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/ones_like"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/ones_like/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/add"
  op: "AddV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/ones_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/SegmentMax"
  op: "SegmentMax"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/add"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/truediv/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/SegmentMax"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/truediv/Cast_1"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/truediv/y"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/truediv"
  op: "RealDiv"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/truediv/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/truediv/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/Ceil"
  op: "Ceil"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/truediv"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/Ceil"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/Shape/Cast"
  op: "Cast"
  input: "stack_4"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/Shape/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_3"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_3/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_3/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/sub"
  op: "Sub"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/zeros"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/sub"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/zeros"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_1"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Reshape_1/shape"
  op: "Pack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Reshape_1"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/SparseToDense"
  op: "SparseToDense"
  input: "DeserializeSparse_5"
  input: "stack_5"
  input: "DeserializeSparse_5:1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/SparseToDense"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/concat/values_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/concat"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/concat/values_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/concat/values_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Reshape"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/SparseToDense"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice"
  op: "StridedSlice"
  input: "DeserializeSparse_5"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_1"
  op: "StridedSlice"
  input: "DeserializeSparse_5"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/ones_like/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/ones_like"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/ones_like/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/add"
  op: "AddV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/ones_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/SegmentMax"
  op: "SegmentMax"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/add"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/truediv/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/SegmentMax"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/truediv/Cast_1"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/truediv/y"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/truediv"
  op: "RealDiv"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/truediv/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/truediv/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/Ceil"
  op: "Ceil"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/truediv"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/Ceil"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/Shape/Cast"
  op: "Cast"
  input: "stack_5"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/Shape/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_3"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_3/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_3/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/sub"
  op: "Sub"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/zeros"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/sub"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/zeros"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_1"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Reshape_1/shape"
  op: "Pack"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Reshape_1"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/SparseToDense"
  op: "SparseToDense"
  input: "DeserializeSparse_6"
  input: "stack_6"
  input: "DeserializeSparse_6:1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/SparseToDense"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/concat/values_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/concat"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/concat/values_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/concat/values_2"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Reshape"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/SparseToDense"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice"
  op: "StridedSlice"
  input: "DeserializeSparse_6"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_1"
  op: "StridedSlice"
  input: "DeserializeSparse_6"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/ones_like/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/ones_like"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/ones_like/Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/add"
  op: "AddV2"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/ones_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/SegmentMax"
  op: "SegmentMax"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/add"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/truediv/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/SegmentMax"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/truediv/Cast_1"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/truediv/y"
  attr {
    key: "DstT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/truediv"
  op: "RealDiv"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/truediv/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/truediv/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/Ceil"
  op: "Ceil"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/truediv"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/Cast"
  op: "Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/Ceil"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/Shape/Cast"
  op: "Cast"
  input: "stack_6"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/Shape/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_3"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_3/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_3/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/sub"
  op: "Sub"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/zeros"
  op: "Fill"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/sub"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/Cast"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/zeros"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Shape_1"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_1"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_1/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_1/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Shape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_2/stack"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_2/stack_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Reshape_1/shape"
  op: "Pack"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/strided_slice_2"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Reshape_1"
  op: "Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Reshape"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Equal"
  op: "Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/All"
  op: "All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/AssertGuard"
  op: "If"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/All"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_BOOL
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_BOOL
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_1_Assert_AssertGuard_false_7705"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_1_Assert_AssertGuard_true_7704"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/AssertGuard/Identity"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/AssertGuard"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/AssertGuard/Identity_1"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/AssertGuard:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/AssertGuard/Identity_2"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/AssertGuard:2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/AssertGuard/Identity_3"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/AssertGuard:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Equal"
  op: "Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/All"
  op: "All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/AssertGuard"
  op: "If"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/All"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_BOOL
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_BOOL
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_3_Assert_AssertGuard_false_7740"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_3_Assert_AssertGuard_true_7739"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/AssertGuard/Identity"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/AssertGuard"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/AssertGuard/Identity_1"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/AssertGuard:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/AssertGuard/Identity_2"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/AssertGuard:2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/AssertGuard/Identity_3"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/AssertGuard:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Equal"
  op: "Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/All"
  op: "All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/AssertGuard"
  op: "If"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/All"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_BOOL
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_BOOL
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_5_Assert_AssertGuard_false_7775"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_5_Assert_AssertGuard_true_7774"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/AssertGuard/Identity"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/AssertGuard"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/AssertGuard/Identity_1"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/AssertGuard:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/AssertGuard/Identity_2"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/AssertGuard:2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/AssertGuard/Identity_3"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/AssertGuard:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Equal"
  op: "Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/All"
  op: "All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/AssertGuard"
  op: "If"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/All"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_BOOL
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_BOOL
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_7_Assert_AssertGuard_false_7810"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_7_Assert_AssertGuard_true_7809"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/AssertGuard/Identity"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/AssertGuard"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/AssertGuard/Identity_1"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/AssertGuard:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/AssertGuard/Identity_2"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/AssertGuard:2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/AssertGuard/Identity_3"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/AssertGuard:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Equal"
  op: "Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/All"
  op: "All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/AssertGuard"
  op: "If"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/All"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_BOOL
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_BOOL
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_9_Assert_AssertGuard_false_7845"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_9_Assert_AssertGuard_true_7844"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/AssertGuard/Identity"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/AssertGuard"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/AssertGuard/Identity_1"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/AssertGuard:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/AssertGuard/Identity_2"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/AssertGuard:2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/AssertGuard/Identity_3"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/AssertGuard:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Equal"
  op: "Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/All"
  op: "All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Equal"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x == y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length:0) = "
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/AssertGuard"
  op: "If"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/All"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/All"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_BOOL
        type: DT_INT64
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_BOOL
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_11_Assert_AssertGuard_false_7880"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_11_Assert_AssertGuard_true_7879"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/AssertGuard/Identity"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/AssertGuard"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/AssertGuard/Identity_1"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/AssertGuard:1"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/AssertGuard/Identity_2"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/AssertGuard:2"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/AssertGuard/Identity_3"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/AssertGuard:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/Identity"
  op: "Identity"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length"
  input: "^rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_1/Assert/AssertGuard/Identity"
  input: "^rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_11/Assert/AssertGuard/Identity"
  input: "^rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_3/Assert/AssertGuard/Identity"
  input: "^rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_5/Assert/AssertGuard/Identity"
  input: "^rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_7/Assert/AssertGuard/Identity"
  input: "^rnn_model/sequence_input_layer/sequence_features/assert_all_equal/assert_equal_9/Assert/AssertGuard/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_features/concat"
  op: "ConcatV2"
  input: "rnn_model/sequence_input_layer/sequence_features/bas_rq/Reshape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/cmmc_max/Reshape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_close/Reshape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/Reshape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/Reshape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/ohlc_usw/Reshape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/vol_rq/Reshape_1"
  input: "rnn_model/sequence_input_layer/sequence_features/concat/axis"
  attr {
    key: "N"
    value {
      i: 7
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_length/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "rnn_model/sequence_input_layer/sequence_length"
      }
    }
  }
}
node {
  name: "rnn_model/sequence_input_layer/sequence_length"
  op: "HistogramSummary"
  input: "rnn_model/sequence_input_layer/sequence_length/tag"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/SequenceMask/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/SequenceMask/Max"
  op: "Max"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/Identity"
  input: "rnn_model/SequenceMask/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/SequenceMask/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/SequenceMask/Maximum"
  op: "Maximum"
  input: "rnn_model/SequenceMask/Const_1"
  input: "rnn_model/SequenceMask/Max"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/SequenceMask/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/SequenceMask/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/SequenceMask/Range"
  op: "Range"
  input: "rnn_model/SequenceMask/Const_2"
  input: "rnn_model/SequenceMask/Maximum"
  input: "rnn_model/SequenceMask/Const_3"
  attr {
    key: "Tidx"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/SequenceMask/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "rnn_model/sequence_input_layer/sequence_features/assert_all_equal/Identity"
  input: "rnn_model/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/SequenceMask/Cast"
  op: "Cast"
  input: "rnn_model/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/SequenceMask/Less"
  op: "Less"
  input: "rnn_model/SequenceMask/Range"
  input: "rnn_model/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.35729479789733887
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.35729479789733887
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn_model/rnn/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/rnn/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn_model/rnn/kernel/Initializer/random_uniform/max"
  input: "rnn_model/rnn/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn_model/rnn/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn_model/rnn/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn_model/rnn/kernel/Initializer/random_uniform/mul"
  input: "rnn_model/rnn/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rnn_model/rnn/kernel"
    }
  }
}
node {
  name: "rnn_model/rnn/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel/Assign"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/kernel"
  input: "rnn_model/rnn/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "(\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal"
  op: "Add"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal/mul"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/Qr"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/mul"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/mul_1/x"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rnn_model/rnn/recurrent_kernel"
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/recurrent_kernel"
  input: "rnn_model/rnn/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias/Initializer/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias/Initializer/concat"
  op: "ConcatV2"
  input: "rnn_model/rnn/bias/Initializer/zeros"
  input: "rnn_model/rnn/bias/Initializer/ones"
  input: "rnn_model/rnn/bias/Initializer/zeros_1"
  input: "rnn_model/rnn/bias/Initializer/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rnn_model/rnn/bias"
    }
  }
}
node {
  name: "rnn_model/rnn/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias/Assign"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/bias"
  input: "rnn_model/rnn/bias/Initializer/concat"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/kernel_1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel_1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.4472135901451111
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel_1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4472135901451111
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel_1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn_model/rnn/kernel_1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/rnn/kernel_1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn_model/rnn/kernel_1/Initializer/random_uniform/max"
  input: "rnn_model/rnn/kernel_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel_1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn_model/rnn/kernel_1/Initializer/random_uniform/RandomUniform"
  input: "rnn_model/rnn/kernel_1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel_1/Initializer/random_uniform"
  op: "Add"
  input: "rnn_model/rnn/kernel_1/Initializer/random_uniform/mul"
  input: "rnn_model/rnn/kernel_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rnn_model/rnn/kernel_1"
    }
  }
}
node {
  name: "rnn_model/rnn/kernel_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/kernel_1/Assign"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/kernel_1"
  input: "rnn_model/rnn/kernel_1/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/kernel_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal/mul"
  op: "Mul"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal/RandomStandardNormal"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal"
  op: "Add"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal/mul"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/Qr"
  op: "Qr"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/DiagPart"
  op: "DiagPart"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/Sign"
  op: "Sign"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/mul"
  op: "Mul"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/Qr"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/mul"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/Reshape"
  op: "Reshape"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/matrix_transpose/transpose"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Initializer/mul_1"
  op: "Mul"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/mul_1/x"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rnn_model/rnn/recurrent_kernel_1"
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Assign"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/recurrent_kernel_1"
  input: "rnn_model/rnn/recurrent_kernel_1/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/recurrent_kernel_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/bias_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias_1/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias_1/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias_1/Initializer/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias_1/Initializer/concat"
  op: "ConcatV2"
  input: "rnn_model/rnn/bias_1/Initializer/zeros"
  input: "rnn_model/rnn/bias_1/Initializer/ones"
  input: "rnn_model/rnn/bias_1/Initializer/zeros_1"
  input: "rnn_model/rnn/bias_1/Initializer/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rnn_model/rnn/bias_1"
    }
  }
}
node {
  name: "rnn_model/rnn/bias_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/bias_1/Assign"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/bias_1"
  input: "rnn_model/rnn/bias_1/Initializer/concat"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/bias_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/Shape"
  op: "Shape"
  input: "rnn_model/sequence_input_layer/sequence_features/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn_model/rnn/Shape"
  input: "rnn_model/rnn/strided_slice/stack"
  input: "rnn_model/rnn/strided_slice/stack_1"
  input: "rnn_model/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/rnn/zeros/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros/mul"
  op: "Mul"
  input: "rnn_model/rnn/strided_slice"
  input: "rnn_model/rnn/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros/Less"
  op: "Less"
  input: "rnn_model/rnn/zeros/mul"
  input: "rnn_model/rnn/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros/packed"
  op: "Pack"
  input: "rnn_model/rnn/strided_slice"
  input: "rnn_model/rnn/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros"
  op: "Fill"
  input: "rnn_model/rnn/zeros/packed"
  input: "rnn_model/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_1/mul"
  op: "Mul"
  input: "rnn_model/rnn/strided_slice"
  input: "rnn_model/rnn/zeros_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_1/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_1/Less"
  op: "Less"
  input: "rnn_model/rnn/zeros_1/mul"
  input: "rnn_model/rnn/zeros_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_1/packed"
  op: "Pack"
  input: "rnn_model/rnn/strided_slice"
  input: "rnn_model/rnn/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_1"
  op: "Fill"
  input: "rnn_model/rnn/zeros_1/packed"
  input: "rnn_model/rnn/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_2/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_2/mul"
  op: "Mul"
  input: "rnn_model/rnn/strided_slice"
  input: "rnn_model/rnn/zeros_2/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_2/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_2/Less"
  op: "Less"
  input: "rnn_model/rnn/zeros_2/mul"
  input: "rnn_model/rnn/zeros_2/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_2/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_2/packed"
  op: "Pack"
  input: "rnn_model/rnn/strided_slice"
  input: "rnn_model/rnn/zeros_2/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_2"
  op: "Fill"
  input: "rnn_model/rnn/zeros_2/packed"
  input: "rnn_model/rnn/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_3/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_3/mul"
  op: "Mul"
  input: "rnn_model/rnn/strided_slice"
  input: "rnn_model/rnn/zeros_3/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_3/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_3/Less"
  op: "Less"
  input: "rnn_model/rnn/zeros_3/mul"
  input: "rnn_model/rnn/zeros_3/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_3/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_3/packed"
  op: "Pack"
  input: "rnn_model/rnn/strided_slice"
  input: "rnn_model/rnn/zeros_3/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_3"
  op: "Fill"
  input: "rnn_model/rnn/zeros_3/packed"
  input: "rnn_model/rnn/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/transpose"
  op: "Transpose"
  input: "rnn_model/sequence_input_layer/sequence_features/concat"
  input: "rnn_model/rnn/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/Shape_1"
  op: "Shape"
  input: "rnn_model/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "rnn_model/rnn/Shape_1"
  input: "rnn_model/rnn/strided_slice_1/stack"
  input: "rnn_model/rnn/strided_slice_1/stack_1"
  input: "rnn_model/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/ExpandDims"
  op: "ExpandDims"
  input: "rnn_model/SequenceMask/Less"
  input: "rnn_model/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/transpose_1"
  op: "Transpose"
  input: "rnn_model/rnn/ExpandDims"
  input: "rnn_model/rnn/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayV2/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayV2"
  op: "TensorListReserve"
  input: "rnn_model/rnn/TensorArrayV2/element_shape"
  input: "rnn_model/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayUnstack/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\007\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayUnstack/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "rnn_model/rnn/transpose"
  input: "rnn_model/rnn/TensorArrayUnstack/TensorListFromTensor/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "rnn_model/rnn/transpose"
  input: "rnn_model/rnn/strided_slice_2/stack"
  input: "rnn_model/rnn/strided_slice_2/stack_1"
  input: "rnn_model/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/rnn/ones_like/Shape"
  op: "Shape"
  input: "rnn_model/rnn/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/ones_like"
  op: "Fill"
  input: "rnn_model/rnn/ones_like/Shape"
  input: "rnn_model/rnn/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/Shape"
  op: "Shape"
  input: "rnn_model/rnn/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn_model/rnn/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9832652
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/random_uniform/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout/random_uniform/max"
  input: "rnn_model/rnn/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/random_uniform/mul"
  op: "Mul"
  input: "rnn_model/rnn/dropout/random_uniform/RandomUniform"
  input: "rnn_model/rnn/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/random_uniform"
  op: "Add"
  input: "rnn_model/rnn/dropout/random_uniform/mul"
  input: "rnn_model/rnn/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout/sub/x"
  input: "rnn_model/rnn/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/truediv"
  op: "RealDiv"
  input: "rnn_model/rnn/dropout/truediv/x"
  input: "rnn_model/rnn/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn_model/rnn/dropout/random_uniform"
  input: "rnn_model/rnn/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/mul"
  op: "Mul"
  input: "rnn_model/rnn/ones_like"
  input: "rnn_model/rnn/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/Cast"
  op: "Cast"
  input: "rnn_model/rnn/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout/mul_1"
  op: "Mul"
  input: "rnn_model/rnn/dropout/mul"
  input: "rnn_model/rnn/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/Shape"
  op: "Shape"
  input: "rnn_model/rnn/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn_model/rnn/dropout_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9463216
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/random_uniform/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_1/random_uniform/max"
  input: "rnn_model/rnn/dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/random_uniform/mul"
  op: "Mul"
  input: "rnn_model/rnn/dropout_1/random_uniform/RandomUniform"
  input: "rnn_model/rnn/dropout_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/random_uniform"
  op: "Add"
  input: "rnn_model/rnn/dropout_1/random_uniform/mul"
  input: "rnn_model/rnn/dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_1/sub/x"
  input: "rnn_model/rnn/dropout_1/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/truediv"
  op: "RealDiv"
  input: "rnn_model/rnn/dropout_1/truediv/x"
  input: "rnn_model/rnn/dropout_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn_model/rnn/dropout_1/random_uniform"
  input: "rnn_model/rnn/dropout_1/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/mul"
  op: "Mul"
  input: "rnn_model/rnn/ones_like"
  input: "rnn_model/rnn/dropout_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/Cast"
  op: "Cast"
  input: "rnn_model/rnn/dropout_1/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_1/mul_1"
  op: "Mul"
  input: "rnn_model/rnn/dropout_1/mul"
  input: "rnn_model/rnn/dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/Shape"
  op: "Shape"
  input: "rnn_model/rnn/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn_model/rnn/dropout_2/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9266288
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/random_uniform/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_2/random_uniform/max"
  input: "rnn_model/rnn/dropout_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/random_uniform/mul"
  op: "Mul"
  input: "rnn_model/rnn/dropout_2/random_uniform/RandomUniform"
  input: "rnn_model/rnn/dropout_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/random_uniform"
  op: "Add"
  input: "rnn_model/rnn/dropout_2/random_uniform/mul"
  input: "rnn_model/rnn/dropout_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_2/sub/x"
  input: "rnn_model/rnn/dropout_2/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/truediv"
  op: "RealDiv"
  input: "rnn_model/rnn/dropout_2/truediv/x"
  input: "rnn_model/rnn/dropout_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn_model/rnn/dropout_2/random_uniform"
  input: "rnn_model/rnn/dropout_2/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/mul"
  op: "Mul"
  input: "rnn_model/rnn/ones_like"
  input: "rnn_model/rnn/dropout_2/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/Cast"
  op: "Cast"
  input: "rnn_model/rnn/dropout_2/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_2/mul_1"
  op: "Mul"
  input: "rnn_model/rnn/dropout_2/mul"
  input: "rnn_model/rnn/dropout_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/Shape"
  op: "Shape"
  input: "rnn_model/rnn/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn_model/rnn/dropout_3/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4779552
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/random_uniform/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_3/random_uniform/max"
  input: "rnn_model/rnn/dropout_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/random_uniform/mul"
  op: "Mul"
  input: "rnn_model/rnn/dropout_3/random_uniform/RandomUniform"
  input: "rnn_model/rnn/dropout_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/random_uniform"
  op: "Add"
  input: "rnn_model/rnn/dropout_3/random_uniform/mul"
  input: "rnn_model/rnn/dropout_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_3/sub/x"
  input: "rnn_model/rnn/dropout_3/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/truediv"
  op: "RealDiv"
  input: "rnn_model/rnn/dropout_3/truediv/x"
  input: "rnn_model/rnn/dropout_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn_model/rnn/dropout_3/random_uniform"
  input: "rnn_model/rnn/dropout_3/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/mul"
  op: "Mul"
  input: "rnn_model/rnn/ones_like"
  input: "rnn_model/rnn/dropout_3/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/Cast"
  op: "Cast"
  input: "rnn_model/rnn/dropout_3/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_3/mul_1"
  op: "Mul"
  input: "rnn_model/rnn/dropout_3/mul"
  input: "rnn_model/rnn/dropout_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/mul"
  op: "Mul"
  input: "rnn_model/rnn/strided_slice_2"
  input: "rnn_model/rnn/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/MatMul"
  op: "MatMul"
  input: "rnn_model/rnn/mul"
  input: "rnn_model/rnn/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/rnn/MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/MatMul_1"
  op: "MatMul"
  input: "rnn_model/rnn/zeros"
  input: "rnn_model/rnn/MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/rnn/add"
  op: "AddV2"
  input: "rnn_model/rnn/MatMul"
  input: "rnn_model/rnn/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/BiasAdd"
  op: "BiasAdd"
  input: "rnn_model/rnn/add"
  input: "rnn_model/rnn/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn_model/rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn_model/rnn/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/split"
  op: "Split"
  input: "rnn_model/rnn/split/split_dim"
  input: "rnn_model/rnn/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn_model/rnn/Sigmoid"
  op: "Sigmoid"
  input: "rnn_model/rnn/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn_model/rnn/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/mul_1"
  op: "Mul"
  input: "rnn_model/rnn/Sigmoid_1"
  input: "rnn_model/rnn/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/Tanh"
  op: "Tanh"
  input: "rnn_model/rnn/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/mul_2"
  op: "Mul"
  input: "rnn_model/rnn/Sigmoid"
  input: "rnn_model/rnn/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/add_1"
  op: "AddV2"
  input: "rnn_model/rnn/mul_1"
  input: "rnn_model/rnn/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn_model/rnn/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/Tanh_1"
  op: "Tanh"
  input: "rnn_model/rnn/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/mul_3"
  op: "Mul"
  input: "rnn_model/rnn/Sigmoid_2"
  input: "rnn_model/rnn/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/ones_like_1/Shape"
  op: "Shape"
  input: "rnn_model/rnn/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/ones_like_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/ones_like_1"
  op: "Fill"
  input: "rnn_model/rnn/ones_like_1/Shape"
  input: "rnn_model/rnn/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02500000037252903
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/Shape"
  op: "Shape"
  input: "rnn_model/rnn/ones_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn_model/rnn/dropout_4/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5044191
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/random_uniform/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_4/random_uniform/max"
  input: "rnn_model/rnn/dropout_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/random_uniform/mul"
  op: "Mul"
  input: "rnn_model/rnn/dropout_4/random_uniform/RandomUniform"
  input: "rnn_model/rnn/dropout_4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/random_uniform"
  op: "Add"
  input: "rnn_model/rnn/dropout_4/random_uniform/mul"
  input: "rnn_model/rnn/dropout_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_4/sub/x"
  input: "rnn_model/rnn/dropout_4/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/truediv"
  op: "RealDiv"
  input: "rnn_model/rnn/dropout_4/truediv/x"
  input: "rnn_model/rnn/dropout_4/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn_model/rnn/dropout_4/random_uniform"
  input: "rnn_model/rnn/dropout_4/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/mul"
  op: "Mul"
  input: "rnn_model/rnn/ones_like_1"
  input: "rnn_model/rnn/dropout_4/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/Cast"
  op: "Cast"
  input: "rnn_model/rnn/dropout_4/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_4/mul_1"
  op: "Mul"
  input: "rnn_model/rnn/dropout_4/mul"
  input: "rnn_model/rnn/dropout_4/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02500000037252903
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/Shape"
  op: "Shape"
  input: "rnn_model/rnn/ones_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn_model/rnn/dropout_5/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7645236
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/random_uniform/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_5/random_uniform/max"
  input: "rnn_model/rnn/dropout_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/random_uniform/mul"
  op: "Mul"
  input: "rnn_model/rnn/dropout_5/random_uniform/RandomUniform"
  input: "rnn_model/rnn/dropout_5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/random_uniform"
  op: "Add"
  input: "rnn_model/rnn/dropout_5/random_uniform/mul"
  input: "rnn_model/rnn/dropout_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_5/sub/x"
  input: "rnn_model/rnn/dropout_5/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/truediv"
  op: "RealDiv"
  input: "rnn_model/rnn/dropout_5/truediv/x"
  input: "rnn_model/rnn/dropout_5/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn_model/rnn/dropout_5/random_uniform"
  input: "rnn_model/rnn/dropout_5/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/mul"
  op: "Mul"
  input: "rnn_model/rnn/ones_like_1"
  input: "rnn_model/rnn/dropout_5/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/Cast"
  op: "Cast"
  input: "rnn_model/rnn/dropout_5/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_5/mul_1"
  op: "Mul"
  input: "rnn_model/rnn/dropout_5/mul"
  input: "rnn_model/rnn/dropout_5/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02500000037252903
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/Shape"
  op: "Shape"
  input: "rnn_model/rnn/ones_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn_model/rnn/dropout_6/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6933539
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/random_uniform/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_6/random_uniform/max"
  input: "rnn_model/rnn/dropout_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/random_uniform/mul"
  op: "Mul"
  input: "rnn_model/rnn/dropout_6/random_uniform/RandomUniform"
  input: "rnn_model/rnn/dropout_6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/random_uniform"
  op: "Add"
  input: "rnn_model/rnn/dropout_6/random_uniform/mul"
  input: "rnn_model/rnn/dropout_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_6/sub/x"
  input: "rnn_model/rnn/dropout_6/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/truediv"
  op: "RealDiv"
  input: "rnn_model/rnn/dropout_6/truediv/x"
  input: "rnn_model/rnn/dropout_6/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn_model/rnn/dropout_6/random_uniform"
  input: "rnn_model/rnn/dropout_6/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/mul"
  op: "Mul"
  input: "rnn_model/rnn/ones_like_1"
  input: "rnn_model/rnn/dropout_6/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/Cast"
  op: "Cast"
  input: "rnn_model/rnn/dropout_6/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_6/mul_1"
  op: "Mul"
  input: "rnn_model/rnn/dropout_6/mul"
  input: "rnn_model/rnn/dropout_6/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02500000037252903
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/Shape"
  op: "Shape"
  input: "rnn_model/rnn/ones_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn_model/rnn/dropout_7/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6241667
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/random_uniform/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_7/random_uniform/max"
  input: "rnn_model/rnn/dropout_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/random_uniform/mul"
  op: "Mul"
  input: "rnn_model/rnn/dropout_7/random_uniform/RandomUniform"
  input: "rnn_model/rnn/dropout_7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/random_uniform"
  op: "Add"
  input: "rnn_model/rnn/dropout_7/random_uniform/mul"
  input: "rnn_model/rnn/dropout_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/sub"
  op: "Sub"
  input: "rnn_model/rnn/dropout_7/sub/x"
  input: "rnn_model/rnn/dropout_7/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/truediv"
  op: "RealDiv"
  input: "rnn_model/rnn/dropout_7/truediv/x"
  input: "rnn_model/rnn/dropout_7/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/GreaterEqual"
  op: "GreaterEqual"
  input: "rnn_model/rnn/dropout_7/random_uniform"
  input: "rnn_model/rnn/dropout_7/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/mul"
  op: "Mul"
  input: "rnn_model/rnn/ones_like_1"
  input: "rnn_model/rnn/dropout_7/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/Cast"
  op: "Cast"
  input: "rnn_model/rnn/dropout_7/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/dropout_7/mul_1"
  op: "Mul"
  input: "rnn_model/rnn/dropout_7/mul"
  input: "rnn_model/rnn/dropout_7/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/mul_4"
  op: "Mul"
  input: "rnn_model/rnn/mul_3"
  input: "rnn_model/rnn/dropout_4/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/MatMul_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/MatMul_2"
  op: "MatMul"
  input: "rnn_model/rnn/mul_4"
  input: "rnn_model/rnn/MatMul_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/rnn/MatMul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/MatMul_3"
  op: "MatMul"
  input: "rnn_model/rnn/zeros_2"
  input: "rnn_model/rnn/MatMul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/rnn/add_2"
  op: "AddV2"
  input: "rnn_model/rnn/MatMul_2"
  input: "rnn_model/rnn/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/BiasAdd_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/rnn/BiasAdd_1"
  op: "BiasAdd"
  input: "rnn_model/rnn/add_2"
  input: "rnn_model/rnn/BiasAdd_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn_model/rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn_model/rnn/split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/split_1"
  op: "Split"
  input: "rnn_model/rnn/split_1/split_dim"
  input: "rnn_model/rnn/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn_model/rnn/Sigmoid_3"
  op: "Sigmoid"
  input: "rnn_model/rnn/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/Sigmoid_4"
  op: "Sigmoid"
  input: "rnn_model/rnn/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/mul_5"
  op: "Mul"
  input: "rnn_model/rnn/Sigmoid_4"
  input: "rnn_model/rnn/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/Tanh_2"
  op: "Tanh"
  input: "rnn_model/rnn/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/mul_6"
  op: "Mul"
  input: "rnn_model/rnn/Sigmoid_3"
  input: "rnn_model/rnn/Tanh_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/add_3"
  op: "AddV2"
  input: "rnn_model/rnn/mul_5"
  input: "rnn_model/rnn/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/Sigmoid_5"
  op: "Sigmoid"
  input: "rnn_model/rnn/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/Tanh_3"
  op: "Tanh"
  input: "rnn_model/rnn/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/mul_7"
  op: "Mul"
  input: "rnn_model/rnn/Sigmoid_5"
  input: "rnn_model/rnn/Tanh_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayV2_1/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayV2_1"
  op: "TensorListReserve"
  input: "rnn_model/rnn/TensorArrayV2_1/element_shape"
  input: "rnn_model/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayV2_2/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayV2_2"
  op: "TensorListReserve"
  input: "rnn_model/rnn/TensorArrayV2_2/element_shape"
  input: "rnn_model/rnn/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayUnstack_1/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayUnstack_1/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "rnn_model/rnn/transpose_1"
  input: "rnn_model/rnn/TensorArrayUnstack_1/TensorListFromTensor/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/zeros_like"
  op: "ZerosLike"
  input: "rnn_model/rnn/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/maximum_iterations"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/loop_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const"
  input: "rnn_model/rnn/while/EmptyTensorList/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_1/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_1"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const_1"
  input: "rnn_model/rnn/while/EmptyTensorList_1/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_2/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_2"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const_2"
  input: "rnn_model/rnn/while/EmptyTensorList_2/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_3/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_3/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_3"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_3/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_3/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_4/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_4/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_4"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_4/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_4/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_5/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_5/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_5"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_5/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_5/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_6/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_6/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_6"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_6/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_6/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_7/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_7/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_7"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_7/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_7/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_8/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_8/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_8"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_8/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_8/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_9/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\007\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_9/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_9"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_9/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_9/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_10/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_10/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_10"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_10/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_10/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_11/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_11/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_11"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_11/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_11/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_12/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\007\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_12/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_12"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_12/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_12/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_13/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\007\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_13/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_13"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_13/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_13/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_14/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377(\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_14/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_14"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_14/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_14/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_15/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_15/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_15"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_15/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_15/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_16/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377(\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_16/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_16"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_16/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_16/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_17/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377(\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_17/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_17"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_17/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_17/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_18/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_18/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_18"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_18/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_18/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_19/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377(\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_19/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_19"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_19/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_19/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_20/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_20"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const_3"
  input: "rnn_model/rnn/while/EmptyTensorList_20/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_21/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_21"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const_4"
  input: "rnn_model/rnn/while/EmptyTensorList_21/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_22/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_22/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_22"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_22/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_22/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_23/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_23/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_23"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_23/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_23/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_24/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_24/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_24"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_24/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_24/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_25/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_25/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_25"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_25/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_25/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_26/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_26/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_26"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_26/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_26/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_27/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_27/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_27"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_27/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_27/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_28/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_28/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_28"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_28/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_28/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_29/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_29/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_29"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_29/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_29/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_30/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_30/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_30"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_30/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_30/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_31/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_31/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_31"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_31/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_31/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_32/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_32/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_32"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_32/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_32/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_33/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_33/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_33"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_33/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_33/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_34/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_34/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_34"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_34/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_34/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_35/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_35/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_35"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_35/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_35/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_36/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_36/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_36"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_36/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_36/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_37/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_37/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_37"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_37/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_37/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_38/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_38/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_38"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_38/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_38/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_39/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_39/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_39"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_39/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_39/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_40/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_40/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_40"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_40/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_40/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_41/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_41/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_41"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_41/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_41/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_42/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_42/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_42"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_42/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_42/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_43/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_43"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const_5"
  input: "rnn_model/rnn/while/EmptyTensorList_43/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_44/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_44"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const_6"
  input: "rnn_model/rnn/while/EmptyTensorList_44/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_45/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_45/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_45"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_45/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_45/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_46/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_46/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_46"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_46/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_46/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_47/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_47/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_47"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_47/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_47/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_48/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_48/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_48"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_48/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_48/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_49/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_49/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_49"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_49/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_49/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_50/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_50/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_50"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_50/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_50/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_51/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_51/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_51"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_51/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_51/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_52/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_52/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_52"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_52/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_52/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_53/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_53/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_53"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_53/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_53/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_54/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_54/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_54"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_54/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_54/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_55/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_55/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_55"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_55/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_55/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_56/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_56/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_56"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_56/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_56/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_57/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_57/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_57"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_57/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_57/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_58/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_58/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_58"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_58/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_58/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_59/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_59/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_59"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_59/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_59/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_60/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_60/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_60"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_60/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_60/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_61/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_61/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_61"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_61/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_61/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_62/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_62/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_62"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_62/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_62/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_63/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_63/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_63"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_63/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_63/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_64/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_64/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_64"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_64/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_64/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_65/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_65/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_65"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_65/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_65/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_66/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_66/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_66"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_66/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_66/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_67/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_67/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_67"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_67/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_67/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_68/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_68/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_68"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_68/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_68/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_69/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_69/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_69"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_69/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_69/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_70/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_70/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_70"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_70/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_70/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_71/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_71/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_71"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_71/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_71/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_72/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_72/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_72"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_72/element_shape"
  input: "rnn_model/rnn/while/EmptyTensorList_72/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_73/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_73"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const_7"
  input: "rnn_model/rnn/while/EmptyTensorList_73/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_74/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_74"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const_8"
  input: "rnn_model/rnn/while/EmptyTensorList_74/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_75/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_75"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const_9"
  input: "rnn_model/rnn/while/EmptyTensorList_75/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_76/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_76"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const_10"
  input: "rnn_model/rnn/while/EmptyTensorList_76/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_77/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/EmptyTensorList_77"
  op: "EmptyTensorList"
  input: "rnn_model/rnn/while/Const_11"
  input: "rnn_model/rnn/while/EmptyTensorList_77/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn_model/rnn/while"
  op: "While"
  input: "rnn_model/rnn/while/loop_counter"
  input: "rnn_model/rnn/while/maximum_iterations"
  input: "rnn_model/rnn/time"
  input: "rnn_model/rnn/TensorArrayV2_1"
  input: "rnn_model/rnn/zeros_like"
  input: "rnn_model/rnn/zeros"
  input: "rnn_model/rnn/zeros_1"
  input: "rnn_model/rnn/zeros_2"
  input: "rnn_model/rnn/zeros_3"
  input: "rnn_model/rnn/strided_slice_1"
  input: "rnn_model/rnn/TensorArrayUnstack/TensorListFromTensor"
  input: "rnn_model/rnn/TensorArrayUnstack_1/TensorListFromTensor"
  input: "rnn_model/rnn/dropout/mul_1"
  input: "rnn_model/rnn/kernel"
  input: "rnn_model/rnn/recurrent_kernel"
  input: "rnn_model/rnn/bias"
  input: "rnn_model/rnn/dropout_4/mul_1"
  input: "rnn_model/rnn/kernel_1"
  input: "rnn_model/rnn/recurrent_kernel_1"
  input: "rnn_model/rnn/bias_1"
  input: "rnn_model/rnn/while/EmptyTensorList"
  input: "rnn_model/rnn/while/EmptyTensorList_1"
  input: "rnn_model/rnn/while/EmptyTensorList_2"
  input: "rnn_model/rnn/while/EmptyTensorList_3"
  input: "rnn_model/rnn/while/EmptyTensorList_4"
  input: "rnn_model/rnn/while/EmptyTensorList_5"
  input: "rnn_model/rnn/while/EmptyTensorList_6"
  input: "rnn_model/rnn/while/EmptyTensorList_7"
  input: "rnn_model/rnn/while/EmptyTensorList_8"
  input: "rnn_model/rnn/while/EmptyTensorList_9"
  input: "rnn_model/rnn/while/EmptyTensorList_10"
  input: "rnn_model/rnn/while/EmptyTensorList_11"
  input: "rnn_model/rnn/while/EmptyTensorList_12"
  input: "rnn_model/rnn/while/EmptyTensorList_13"
  input: "rnn_model/rnn/while/EmptyTensorList_14"
  input: "rnn_model/rnn/while/EmptyTensorList_15"
  input: "rnn_model/rnn/while/EmptyTensorList_16"
  input: "rnn_model/rnn/while/EmptyTensorList_17"
  input: "rnn_model/rnn/while/EmptyTensorList_18"
  input: "rnn_model/rnn/while/EmptyTensorList_19"
  input: "rnn_model/rnn/while/EmptyTensorList_20"
  input: "rnn_model/rnn/while/EmptyTensorList_21"
  input: "rnn_model/rnn/while/EmptyTensorList_22"
  input: "rnn_model/rnn/while/EmptyTensorList_23"
  input: "rnn_model/rnn/while/EmptyTensorList_24"
  input: "rnn_model/rnn/while/EmptyTensorList_25"
  input: "rnn_model/rnn/while/EmptyTensorList_26"
  input: "rnn_model/rnn/while/EmptyTensorList_27"
  input: "rnn_model/rnn/while/EmptyTensorList_28"
  input: "rnn_model/rnn/while/EmptyTensorList_29"
  input: "rnn_model/rnn/while/EmptyTensorList_30"
  input: "rnn_model/rnn/while/EmptyTensorList_31"
  input: "rnn_model/rnn/while/EmptyTensorList_32"
  input: "rnn_model/rnn/while/EmptyTensorList_33"
  input: "rnn_model/rnn/while/EmptyTensorList_34"
  input: "rnn_model/rnn/while/EmptyTensorList_35"
  input: "rnn_model/rnn/while/EmptyTensorList_36"
  input: "rnn_model/rnn/while/EmptyTensorList_37"
  input: "rnn_model/rnn/while/EmptyTensorList_38"
  input: "rnn_model/rnn/while/EmptyTensorList_39"
  input: "rnn_model/rnn/while/EmptyTensorList_40"
  input: "rnn_model/rnn/while/EmptyTensorList_41"
  input: "rnn_model/rnn/while/EmptyTensorList_42"
  input: "rnn_model/rnn/while/EmptyTensorList_43"
  input: "rnn_model/rnn/while/EmptyTensorList_44"
  input: "rnn_model/rnn/while/EmptyTensorList_45"
  input: "rnn_model/rnn/while/EmptyTensorList_46"
  input: "rnn_model/rnn/while/EmptyTensorList_47"
  input: "rnn_model/rnn/while/EmptyTensorList_48"
  input: "rnn_model/rnn/while/EmptyTensorList_49"
  input: "rnn_model/rnn/while/EmptyTensorList_50"
  input: "rnn_model/rnn/while/EmptyTensorList_51"
  input: "rnn_model/rnn/while/EmptyTensorList_52"
  input: "rnn_model/rnn/while/EmptyTensorList_53"
  input: "rnn_model/rnn/while/EmptyTensorList_54"
  input: "rnn_model/rnn/while/EmptyTensorList_55"
  input: "rnn_model/rnn/while/EmptyTensorList_56"
  input: "rnn_model/rnn/while/EmptyTensorList_57"
  input: "rnn_model/rnn/while/EmptyTensorList_58"
  input: "rnn_model/rnn/while/EmptyTensorList_59"
  input: "rnn_model/rnn/while/EmptyTensorList_60"
  input: "rnn_model/rnn/while/EmptyTensorList_61"
  input: "rnn_model/rnn/while/EmptyTensorList_62"
  input: "rnn_model/rnn/while/EmptyTensorList_63"
  input: "rnn_model/rnn/while/EmptyTensorList_64"
  input: "rnn_model/rnn/while/EmptyTensorList_65"
  input: "rnn_model/rnn/while/EmptyTensorList_66"
  input: "rnn_model/rnn/while/EmptyTensorList_67"
  input: "rnn_model/rnn/while/EmptyTensorList_68"
  input: "rnn_model/rnn/while/EmptyTensorList_69"
  input: "rnn_model/rnn/while/EmptyTensorList_70"
  input: "rnn_model/rnn/while/EmptyTensorList_71"
  input: "rnn_model/rnn/while/EmptyTensorList_72"
  input: "rnn_model/rnn/while/EmptyTensorList_73"
  input: "rnn_model/rnn/while/EmptyTensorList_74"
  input: "rnn_model/rnn/while/EmptyTensorList_75"
  input: "rnn_model/rnn/while/EmptyTensorList_76"
  input: "rnn_model/rnn/while/EmptyTensorList_77"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_FLOAT
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_num_original_outputs"
    value {
      i: 98
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "rnn_model_rnn_while_body_8245"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "rnn_model_rnn_while_cond_8244"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity"
  op: "Identity"
  input: "rnn_model/rnn/while"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_1"
  op: "Identity"
  input: "rnn_model/rnn/while:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_2"
  op: "Identity"
  input: "rnn_model/rnn/while:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_3"
  op: "Identity"
  input: "rnn_model/rnn/while:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_4"
  op: "Identity"
  input: "rnn_model/rnn/while:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_5"
  op: "Identity"
  input: "rnn_model/rnn/while:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_6"
  op: "Identity"
  input: "rnn_model/rnn/while:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_7"
  op: "Identity"
  input: "rnn_model/rnn/while:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_8"
  op: "Identity"
  input: "rnn_model/rnn/while:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_9"
  op: "Identity"
  input: "rnn_model/rnn/while:9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_10"
  op: "Identity"
  input: "rnn_model/rnn/while:10"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_11"
  op: "Identity"
  input: "rnn_model/rnn/while:11"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_12"
  op: "Identity"
  input: "rnn_model/rnn/while:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_13"
  op: "Identity"
  input: "rnn_model/rnn/while:13"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_14"
  op: "Identity"
  input: "rnn_model/rnn/while:14"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_15"
  op: "Identity"
  input: "rnn_model/rnn/while:15"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_16"
  op: "Identity"
  input: "rnn_model/rnn/while:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_17"
  op: "Identity"
  input: "rnn_model/rnn/while:17"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_18"
  op: "Identity"
  input: "rnn_model/rnn/while:18"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_19"
  op: "Identity"
  input: "rnn_model/rnn/while:19"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_20"
  op: "Identity"
  input: "rnn_model/rnn/while:20"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_21"
  op: "Identity"
  input: "rnn_model/rnn/while:21"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_22"
  op: "Identity"
  input: "rnn_model/rnn/while:22"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_23"
  op: "Identity"
  input: "rnn_model/rnn/while:23"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_24"
  op: "Identity"
  input: "rnn_model/rnn/while:24"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_25"
  op: "Identity"
  input: "rnn_model/rnn/while:25"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_26"
  op: "Identity"
  input: "rnn_model/rnn/while:26"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_27"
  op: "Identity"
  input: "rnn_model/rnn/while:27"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_28"
  op: "Identity"
  input: "rnn_model/rnn/while:28"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_29"
  op: "Identity"
  input: "rnn_model/rnn/while:29"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_30"
  op: "Identity"
  input: "rnn_model/rnn/while:30"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_31"
  op: "Identity"
  input: "rnn_model/rnn/while:31"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_32"
  op: "Identity"
  input: "rnn_model/rnn/while:32"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_33"
  op: "Identity"
  input: "rnn_model/rnn/while:33"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_34"
  op: "Identity"
  input: "rnn_model/rnn/while:34"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_35"
  op: "Identity"
  input: "rnn_model/rnn/while:35"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_36"
  op: "Identity"
  input: "rnn_model/rnn/while:36"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_37"
  op: "Identity"
  input: "rnn_model/rnn/while:37"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_38"
  op: "Identity"
  input: "rnn_model/rnn/while:38"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_39"
  op: "Identity"
  input: "rnn_model/rnn/while:39"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_40"
  op: "Identity"
  input: "rnn_model/rnn/while:40"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_41"
  op: "Identity"
  input: "rnn_model/rnn/while:41"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_42"
  op: "Identity"
  input: "rnn_model/rnn/while:42"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_43"
  op: "Identity"
  input: "rnn_model/rnn/while:43"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_44"
  op: "Identity"
  input: "rnn_model/rnn/while:44"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_45"
  op: "Identity"
  input: "rnn_model/rnn/while:45"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_46"
  op: "Identity"
  input: "rnn_model/rnn/while:46"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_47"
  op: "Identity"
  input: "rnn_model/rnn/while:47"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_48"
  op: "Identity"
  input: "rnn_model/rnn/while:48"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_49"
  op: "Identity"
  input: "rnn_model/rnn/while:49"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_50"
  op: "Identity"
  input: "rnn_model/rnn/while:50"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_51"
  op: "Identity"
  input: "rnn_model/rnn/while:51"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_52"
  op: "Identity"
  input: "rnn_model/rnn/while:52"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_53"
  op: "Identity"
  input: "rnn_model/rnn/while:53"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_54"
  op: "Identity"
  input: "rnn_model/rnn/while:54"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_55"
  op: "Identity"
  input: "rnn_model/rnn/while:55"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_56"
  op: "Identity"
  input: "rnn_model/rnn/while:56"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_57"
  op: "Identity"
  input: "rnn_model/rnn/while:57"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_58"
  op: "Identity"
  input: "rnn_model/rnn/while:58"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_59"
  op: "Identity"
  input: "rnn_model/rnn/while:59"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_60"
  op: "Identity"
  input: "rnn_model/rnn/while:60"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_61"
  op: "Identity"
  input: "rnn_model/rnn/while:61"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_62"
  op: "Identity"
  input: "rnn_model/rnn/while:62"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_63"
  op: "Identity"
  input: "rnn_model/rnn/while:63"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_64"
  op: "Identity"
  input: "rnn_model/rnn/while:64"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_65"
  op: "Identity"
  input: "rnn_model/rnn/while:65"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_66"
  op: "Identity"
  input: "rnn_model/rnn/while:66"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_67"
  op: "Identity"
  input: "rnn_model/rnn/while:67"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_68"
  op: "Identity"
  input: "rnn_model/rnn/while:68"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_69"
  op: "Identity"
  input: "rnn_model/rnn/while:69"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_70"
  op: "Identity"
  input: "rnn_model/rnn/while:70"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_71"
  op: "Identity"
  input: "rnn_model/rnn/while:71"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_72"
  op: "Identity"
  input: "rnn_model/rnn/while:72"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_73"
  op: "Identity"
  input: "rnn_model/rnn/while:73"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_74"
  op: "Identity"
  input: "rnn_model/rnn/while:74"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_75"
  op: "Identity"
  input: "rnn_model/rnn/while:75"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_76"
  op: "Identity"
  input: "rnn_model/rnn/while:76"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_77"
  op: "Identity"
  input: "rnn_model/rnn/while:77"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_78"
  op: "Identity"
  input: "rnn_model/rnn/while:78"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_79"
  op: "Identity"
  input: "rnn_model/rnn/while:79"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_80"
  op: "Identity"
  input: "rnn_model/rnn/while:80"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_81"
  op: "Identity"
  input: "rnn_model/rnn/while:81"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_82"
  op: "Identity"
  input: "rnn_model/rnn/while:82"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_83"
  op: "Identity"
  input: "rnn_model/rnn/while:83"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_84"
  op: "Identity"
  input: "rnn_model/rnn/while:84"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_85"
  op: "Identity"
  input: "rnn_model/rnn/while:85"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_86"
  op: "Identity"
  input: "rnn_model/rnn/while:86"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_87"
  op: "Identity"
  input: "rnn_model/rnn/while:87"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_88"
  op: "Identity"
  input: "rnn_model/rnn/while:88"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_89"
  op: "Identity"
  input: "rnn_model/rnn/while:89"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_90"
  op: "Identity"
  input: "rnn_model/rnn/while:90"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_91"
  op: "Identity"
  input: "rnn_model/rnn/while:91"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_92"
  op: "Identity"
  input: "rnn_model/rnn/while:92"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_93"
  op: "Identity"
  input: "rnn_model/rnn/while:93"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_94"
  op: "Identity"
  input: "rnn_model/rnn/while:94"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_95"
  op: "Identity"
  input: "rnn_model/rnn/while:95"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_96"
  op: "Identity"
  input: "rnn_model/rnn/while:96"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/while/Identity_97"
  op: "Identity"
  input: "rnn_model/rnn/while:97"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayV2Stack/TensorListStack/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/TensorArrayV2Stack/TensorListStack"
  op: "TensorListStack"
  input: "rnn_model/rnn/while/Identity_3"
  input: "rnn_model/rnn/TensorArrayV2Stack/TensorListStack/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_elements"
    value {
      i: -1
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn_model/rnn/strided_slice_3"
  op: "StridedSlice"
  input: "rnn_model/rnn/TensorArrayV2Stack/TensorListStack"
  input: "rnn_model/rnn/strided_slice_3/stack"
  input: "rnn_model/rnn/strided_slice_3/stack_1"
  input: "rnn_model/rnn/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn_model/rnn/transpose_2/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/rnn/transpose_2"
  op: "Transpose"
  input: "rnn_model/rnn/TensorArrayV2Stack/TensorListStack"
  input: "rnn_model/rnn/transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/logits/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\005\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "rnn_model/logits/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.8660253882408142
      }
    }
  }
}
node {
  name: "rnn_model/logits/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8660253882408142
      }
    }
  }
}
node {
  name: "rnn_model/logits/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn_model/logits/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn_model/logits/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn_model/logits/kernel/Initializer/random_uniform/max"
  input: "rnn_model/logits/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/logits/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn_model/logits/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn_model/logits/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/logits/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn_model/logits/kernel/Initializer/random_uniform/mul"
  input: "rnn_model/logits/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn_model/logits/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rnn_model/logits/kernel"
    }
  }
}
node {
  name: "rnn_model/logits/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rnn_model/logits/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/logits/kernel/Assign"
  op: "AssignVariableOp"
  input: "rnn_model/logits/kernel"
  input: "rnn_model/logits/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/logits/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/logits/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/logits/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn_model/logits/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "rnn_model/logits/bias"
    }
  }
}
node {
  name: "rnn_model/logits/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "rnn_model/logits/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn_model/logits/bias/Assign"
  op: "AssignVariableOp"
  input: "rnn_model/logits/bias"
  input: "rnn_model/logits/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/logits/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/logits/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/logits/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/logits/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/logits/MatMul"
  op: "MatMul"
  input: "rnn_model/rnn/strided_slice_3"
  input: "rnn_model/logits/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn_model/logits/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "rnn_model/logits/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn_model/logits/BiasAdd"
  op: "BiasAdd"
  input: "rnn_model/logits/MatMul"
  input: "rnn_model/logits/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "head/logits/Shape"
  op: "Shape"
  input: "rnn_model/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "head/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "head/losses/logits/Shape"
  op: "Shape"
  input: "rnn_model/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/logits/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "head/losses/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "head/losses/logits/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "head/losses/labels/assert_rank_at_least/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_rank_at_least/Shape"
  op: "Shape"
  input: "IteratorGetNext:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/labels/assert_rank_at_least/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  op: "NoOp"
}
node {
  name: "head/losses/labels/Shape"
  op: "Shape"
  input: "rnn_model/logits/BiasAdd"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/labels/strided_slice/stack"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "head/losses/labels/strided_slice/stack_1"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "head/losses/labels/strided_slice/stack_2"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "head/losses/labels/strided_slice"
  op: "StridedSlice"
  input: "head/losses/labels/Shape"
  input: "head/losses/labels/strided_slice/stack"
  input: "head/losses/labels/strided_slice/stack_1"
  input: "head/losses/labels/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "head/losses/labels/concat/values_1"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "head/losses/labels/concat/axis"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "head/losses/labels/concat"
  op: "ConcatV2"
  input: "head/losses/labels/strided_slice"
  input: "head/losses/labels/concat/values_1"
  input: "head/losses/labels/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/labels/Shape_1"
  op: "Shape"
  input: "IteratorGetNext:7"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/labels/assert_equal_1/Equal"
  op: "Equal"
  input: "head/losses/labels/concat"
  input: "head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "head/losses/labels/assert_equal_1/Const"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal_1/All"
  op: "All"
  input: "head/losses/labels/assert_equal_1/Equal"
  input: "head/losses/labels/assert_equal_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "head/losses/labels/assert_equal_1/Assert/Const"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [D0, D1, ... DN, 3]. Suggested Fix: check your n_classes argument to the head and/or the shape of your label."
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal_1/Assert/Const_1"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal_1/Assert/Const_2"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal_1/Assert/Assert/data_0"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels shape must be [D0, D1, ... DN, 3]. Suggested Fix: check your n_classes argument to the head and/or the shape of your label."
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal_1/Assert/Assert/data_1"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "expected_labels_shape: "
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal_1/Assert/Assert/data_3"
  op: "Const"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels_shape: "
      }
    }
  }
}
node {
  name: "head/losses/labels/assert_equal_1/Assert/Assert"
  op: "Assert"
  input: "head/losses/labels/assert_equal_1/All"
  input: "head/losses/labels/assert_equal_1/Assert/Assert/data_0"
  input: "head/losses/labels/assert_equal_1/Assert/Assert/data_1"
  input: "head/losses/labels/concat"
  input: "head/losses/labels/assert_equal_1/Assert/Assert/data_3"
  input: "head/losses/labels/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "head/losses/labels"
  op: "Identity"
  input: "IteratorGetNext:7"
  input: "^head/losses/labels/assert_equal_1/Assert/Assert"
  input: "^head/losses/labels/assert_rank_at_least/static_checks_determined_all_ok"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "rnn_model/logits/BiasAdd"
  input: "head/losses/labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "head/losses/mean_squared_error/Cast/x"
  op: "Const"
  input: "^head/losses/mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "head/losses/mean_squared_error/Mul"
  op: "Mul"
  input: "head/losses/mean_squared_error/SquaredDifference"
  input: "head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^head/losses/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^head/losses/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "head/losses/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "head/losses/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "head/losses/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "head/losses/weighted_loss/Cast/x"
  input: "head/losses/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Mul"
  op: "Mul"
  input: "head/losses/mean_squared_error/Mul"
  input: "head/losses/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Sum"
  op: "Sum"
  input: "head/losses/weighted_loss/Mul"
  input: "head/losses/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "head/losses/weighted_loss/num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "head/losses/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "head/losses/weighted_loss/Sum_1"
  op: "Sum"
  input: "head/losses/weighted_loss/Sum"
  input: "head/losses/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "head/losses/weighted_loss/value"
  op: "DivNoNan"
  input: "head/losses/weighted_loss/Sum_1"
  input: "head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/Fill"
  op: "Fill"
  input: "training/RMSprop/gradients/gradients/Shape"
  input: "training/RMSprop/gradients/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Shape"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/Fill"
  input: "head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Sum"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "head/losses/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Neg"
  input: "head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_1"
  input: "head/losses/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/Fill"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/mul"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Sum_1"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/value_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_1_grad/Tile"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_grad/Reshape"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_grad/Tile"
  input: "head/losses/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Sum_grad/Tile"
  input: "head/losses/mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs/s0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs/s1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs/s0"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/BroadcastGradientArgs/s1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul"
  input: "head/losses/mean_squared_error/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul_1"
  op: "Mul"
  input: "head/losses/mean_squared_error/SquaredDifference"
  input: "training/RMSprop/gradients/gradients/head/losses/weighted_loss/Mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul_1"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Sum"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/scalar"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  op: "Sub"
  input: "rnn_model/logits/BiasAdd"
  input: "head/losses/labels"
  input: "^training/RMSprop/gradients/gradients/head/losses/mean_squared_error/Mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Mul"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "rnn_model/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  op: "Shape"
  input: "head/losses/labels"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/mul_1"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Sum_1"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  input: "rnn_model/logits/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "rnn_model/rnn/strided_slice_3"
  input: "training/RMSprop/gradients/gradients/head/losses/mean_squared_error/SquaredDifference_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/strided_slice_3_grad/Shape"
  op: "Shape"
  input: "rnn_model/rnn/TensorArrayV2Stack/TensorListStack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/strided_slice_3_grad/Shape"
  input: "rnn_model/rnn/strided_slice_3/stack"
  input: "rnn_model/rnn/strided_slice_3/stack_1"
  input: "rnn_model/rnn/strided_slice_3/stack_2"
  input: "training/RMSprop/gradients/gradients/rnn_model/logits/MatMul_grad/MatMul"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\005\000\000\000"
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/strided_slice_3_grad/StridedSliceGrad"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:10"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:11"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/VariableShape"
  op: "VariableShape"
  input: "rnn_model/rnn/while:13"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros"
  op: "Fill"
  input: "training/RMSprop/gradients/gradients/VariableShape"
  input: "training/RMSprop/gradients/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/VariableShape_1"
  op: "VariableShape"
  input: "rnn_model/rnn/while:14"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_1"
  op: "Fill"
  input: "training/RMSprop/gradients/gradients/VariableShape_1"
  input: "training/RMSprop/gradients/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/VariableShape_2"
  op: "VariableShape"
  input: "rnn_model/rnn/while:15"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_2"
  op: "Fill"
  input: "training/RMSprop/gradients/gradients/VariableShape_2"
  input: "training/RMSprop/gradients/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/VariableShape_3"
  op: "VariableShape"
  input: "rnn_model/rnn/while:17"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_3"
  op: "Fill"
  input: "training/RMSprop/gradients/gradients/VariableShape_3"
  input: "training/RMSprop/gradients/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/VariableShape_4"
  op: "VariableShape"
  input: "rnn_model/rnn/while:18"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_4"
  op: "Fill"
  input: "training/RMSprop/gradients/gradients/VariableShape_4"
  input: "training/RMSprop/gradients/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/VariableShape_5"
  op: "VariableShape"
  input: "rnn_model/rnn/while:19"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_5"
  op: "Fill"
  input: "training/RMSprop/gradients/gradients/VariableShape_5"
  input: "training/RMSprop/gradients/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:20"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:21"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:22"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:23"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:24"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:25"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:26"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:27"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_17"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:28"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_18"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:29"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_19"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:30"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_20"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:31"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_21"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:32"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_22"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:33"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_23"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:34"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_24"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:35"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_25"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:36"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_26"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:37"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_27"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:38"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_28"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:39"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_29"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:40"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_30"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:41"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_31"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:42"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_32"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:43"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_33"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:44"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_34"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:45"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_35"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:46"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_36"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:47"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_37"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:48"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_38"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:49"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_39"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:50"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_40"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:51"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_41"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:52"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_42"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:53"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_43"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:54"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_44"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:55"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_45"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:56"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_46"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:57"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_47"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:58"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_48"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:59"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_49"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:60"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_50"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:61"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_51"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:62"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_52"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:63"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_53"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:64"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_54"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:65"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_55"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:66"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_56"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:67"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_57"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:68"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_58"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:69"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_59"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:70"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_60"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:71"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_61"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:72"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_62"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:73"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_63"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:74"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_64"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:75"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_65"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:76"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_66"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:77"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_67"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:78"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_68"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:79"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_69"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:80"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_70"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:81"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_71"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:82"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_72"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:83"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_73"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:84"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_74"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:85"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_75"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:86"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_76"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:87"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_77"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:88"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_78"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:89"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_79"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:90"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_80"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:91"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_81"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:92"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_82"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:93"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_83"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:94"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_84"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:95"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_85"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:96"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/zeros_like_86"
  op: "ZerosLike"
  input: "rnn_model/rnn/while:97"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/grad_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad"
  op: "While"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/grad_counter"
  input: "rnn_model/rnn/while/maximum_iterations"
  input: "rnn_model/rnn/while"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor"
  input: "training/RMSprop/gradients/gradients/zeros_like"
  input: "training/RMSprop/gradients/gradients/zeros_like_1"
  input: "training/RMSprop/gradients/gradients/zeros_like_2"
  input: "training/RMSprop/gradients/gradients/zeros_like_3"
  input: "training/RMSprop/gradients/gradients/zeros_like_4"
  input: "training/RMSprop/gradients/gradients/zeros_like_5"
  input: "training/RMSprop/gradients/gradients/zeros_like_6"
  input: "training/RMSprop/gradients/gradients/zeros_like_7"
  input: "training/RMSprop/gradients/gradients/zeros"
  input: "training/RMSprop/gradients/gradients/zeros_1"
  input: "training/RMSprop/gradients/gradients/zeros_2"
  input: "training/RMSprop/gradients/gradients/zeros_like_8"
  input: "training/RMSprop/gradients/gradients/zeros_3"
  input: "training/RMSprop/gradients/gradients/zeros_4"
  input: "training/RMSprop/gradients/gradients/zeros_5"
  input: "rnn_model/rnn/while:80"
  input: "rnn_model/rnn/while:21"
  input: "rnn_model/rnn/while:82"
  input: "rnn_model/rnn/while:54"
  input: "rnn_model/rnn/while:89"
  input: "rnn_model/rnn/while:24"
  input: "rnn_model/rnn/while:84"
  input: "rnn_model/rnn/while:51"
  input: "rnn_model/rnn/while:90"
  input: "rnn_model/rnn/while:25"
  input: "rnn_model/rnn/while:86"
  input: "rnn_model/rnn/while:77"
  input: "rnn_model/rnn/while:91"
  input: "rnn_model/rnn/while:26"
  input: "rnn_model/rnn/while:88"
  input: "rnn_model/rnn/while:74"
  input: "rnn_model/rnn/while:92"
  input: "rnn_model/rnn/while:27"
  input: "rnn_model/rnn/while:79"
  input: "rnn_model/rnn/while:23"
  input: "rnn_model/rnn/while:75"
  input: "rnn_model/rnn/while:76"
  input: "rnn_model/rnn/while:71"
  input: "rnn_model/rnn/while:73"
  input: "rnn_model/rnn/while:70"
  input: "rnn_model/rnn/while:69"
  input: "rnn_model/rnn/while:72"
  input: "rnn_model/rnn/while:57"
  input: "rnn_model/rnn/while:59"
  input: "rnn_model/rnn/while:56"
  input: "rnn_model/rnn/while:55"
  input: "rnn_model/rnn/while:58"
  input: "rnn_model/rnn/while:16"
  input: "rnn_model/rnn/while:52"
  input: "rnn_model/rnn/while:53"
  input: "rnn_model/rnn/while:48"
  input: "rnn_model/rnn/while:50"
  input: "rnn_model/rnn/while:47"
  input: "rnn_model/rnn/while:46"
  input: "rnn_model/rnn/while:49"
  input: "rnn_model/rnn/while:34"
  input: "rnn_model/rnn/while:36"
  input: "rnn_model/rnn/while:33"
  input: "rnn_model/rnn/while:32"
  input: "rnn_model/rnn/while:35"
  input: "rnn_model/rnn/while:29"
  input: "rnn_model/rnn/while:12"
  input: "rnn_model/rnn/while:10"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
        shape {
          dim {
            size: 40
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 20
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "rnn_model_rnn_while_body_8245_grad_9262"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "rnn_model_rnn_while_cond_8244_grad_9736"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
        shape {
          dim {
            size: 40
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 20
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_1"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_2"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_3"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_4"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_5"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_6"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_7"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_8"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_9"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:9"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_10"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:10"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_11"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_12"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_13"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_14"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_15"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_16"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_17"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_18"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_19"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:19"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_20"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:20"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_21"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:21"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_22"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:22"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_23"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:23"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_24"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:24"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_25"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:25"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_26"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:26"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_27"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:27"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_28"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:28"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_29"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:29"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_30"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:30"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_31"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:31"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_32"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:32"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_33"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:33"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_34"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:34"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_35"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:35"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_36"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:36"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_37"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:37"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_38"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:38"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_39"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:39"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_40"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:40"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_41"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:41"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_42"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:42"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_43"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:43"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_44"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:44"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_45"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:45"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_46"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:46"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_47"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:47"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_48"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:48"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_49"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:49"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_50"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:50"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_51"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_52"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:52"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_53"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:53"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_54"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:54"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_55"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:55"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_56"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:56"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_57"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:57"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_58"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:58"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_59"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:59"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_60"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:60"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_61"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:61"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_62"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:62"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_63"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:63"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_64"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:64"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_65"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 7
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_66"
  op: "Identity"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/rnn_model/rnn/while_grad:66"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value/Minimum"
  op: "Minimum"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_12"
  input: "training/RMSprop/gradients/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value"
  op: "Maximum"
  input: "training/RMSprop/gradients/clip_by_value/Minimum"
  input: "training/RMSprop/gradients/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_13"
  input: "training/RMSprop/gradients/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_1"
  op: "Maximum"
  input: "training/RMSprop/gradients/clip_by_value_1/Minimum"
  input: "training/RMSprop/gradients/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_2/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_14"
  input: "training/RMSprop/gradients/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_2"
  op: "Maximum"
  input: "training/RMSprop/gradients/clip_by_value_2/Minimum"
  input: "training/RMSprop/gradients/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_3/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_16"
  input: "training/RMSprop/gradients/clip_by_value_3/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_3"
  op: "Maximum"
  input: "training/RMSprop/gradients/clip_by_value_3/Minimum"
  input: "training/RMSprop/gradients/clip_by_value_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_4/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_17"
  input: "training/RMSprop/gradients/clip_by_value_4/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_4"
  op: "Maximum"
  input: "training/RMSprop/gradients/clip_by_value_4/Minimum"
  input: "training/RMSprop/gradients/clip_by_value_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_5/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "training/RMSprop/gradients/gradients/rnn_model/rnn/while_grad/Identity_18"
  input: "training/RMSprop/gradients/clip_by_value_5/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_5"
  op: "Maximum"
  input: "training/RMSprop/gradients/clip_by_value_5/Minimum"
  input: "training/RMSprop/gradients/clip_by_value_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_6/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_6/Minimum"
  op: "Minimum"
  input: "training/RMSprop/gradients/gradients/rnn_model/logits/MatMul_grad/MatMul_1"
  input: "training/RMSprop/gradients/clip_by_value_6/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_6/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_6"
  op: "Maximum"
  input: "training/RMSprop/gradients/clip_by_value_6/Minimum"
  input: "training/RMSprop/gradients/clip_by_value_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_7/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_7/Minimum"
  op: "Minimum"
  input: "training/RMSprop/gradients/gradients/rnn_model/logits/BiasAdd_grad/BiasAddGrad"
  input: "training/RMSprop/gradients/clip_by_value_7/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/gradients/clip_by_value_7"
  op: "Maximum"
  input: "training/RMSprop/gradients/clip_by_value_7/Minimum"
  input: "training/RMSprop/gradients/clip_by_value_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/decay"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/decay"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/decay"
    }
  }
}
node {
  name: "training/RMSprop/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/decay/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/decay"
  input: "training/RMSprop/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.9999999242136255e-05
      }
    }
  }
}
node {
  name: "training/RMSprop/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/learning_rate"
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/learning_rate"
  input: "training/RMSprop/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/momentum/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/momentum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/momentum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/momentum"
    }
  }
}
node {
  name: "training/RMSprop/momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/momentum/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/momentum"
  input: "training/RMSprop/momentum/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rho/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/rho"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "training/RMSprop/rho"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/RMSprop/rho"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rho"
    }
  }
}
node {
  name: "training/RMSprop/rho/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rho"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/rho/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/rho"
  input: "training/RMSprop/rho/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rho/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rho"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/kernel/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rnn_model/rnn/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rnn_model/rnn/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias/rms"
  input: "training/RMSprop/rnn_model/rnn/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/kernel_1/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/kernel_1/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/kernel_1/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/kernel_1/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/bias_1/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/bias_1/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rnn_model/rnn/bias_1/rms"
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/bias_1/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/bias_1/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/rnn/bias_1/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/logits/kernel/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/logits/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rnn_model/logits/kernel/rms"
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/logits/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/logits/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/logits/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/logits/kernel/rms"
  input: "training/RMSprop/rnn_model/logits/kernel/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/logits/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/logits/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/logits/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/logits/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/RMSprop/rnn_model/logits/bias/rms"
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/logits/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/logits/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/logits/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/logits/bias/rms"
  input: "training/RMSprop/rnn_model/logits/bias/rms/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/rnn_model/logits/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/logits/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity"
  op: "Identity"
  input: "training/RMSprop/Identity/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/Identity_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rho"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_1"
  op: "Identity"
  input: "training/RMSprop/Identity_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/Neg"
  op: "Neg"
  input: "training/RMSprop/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/RMSprop/Identity_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/Identity_2"
  op: "Identity"
  input: "training/RMSprop/Identity_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/RMSprop/sub"
  op: "Sub"
  input: "training/RMSprop/sub/x"
  input: "training/RMSprop/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/mul"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/kernel"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/kernel"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/mul"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/recurrent_kernel"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/recurrent_kernel"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/mul"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias/rms"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/bias"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/bias"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/Square"
  op: "Square"
  input: "training/RMSprop/gradients/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/mul"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/mul_2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/kernel_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/kernel_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/Square"
  op: "Square"
  input: "training/RMSprop/gradients/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/mul"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/mul_2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/recurrent_kernel_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/recurrent_kernel_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/recurrent_kernel_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/Square"
  op: "Square"
  input: "training/RMSprop/gradients/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/mul"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/mul_2"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/bias_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "rnn_model/rnn/bias_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/rnn/bias_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/logits/kernel/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/Square"
  op: "Square"
  input: "training/RMSprop/gradients/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/mul"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/logits/kernel/rms"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/logits/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/logits/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/logits/kernel/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/logits/kernel/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/mul_2"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rnn_model/logits/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "rnn_model/logits/kernel"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "rnn_model/logits/kernel"
  input: "^training/RMSprop/RMSprop/update_rnn_model/logits/kernel/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/logits/bias/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/mul"
  op: "Mul"
  input: "training/RMSprop/Identity_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/Square"
  op: "Square"
  input: "training/RMSprop/gradients/clip_by_value_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/mul_1"
  op: "Mul"
  input: "training/RMSprop/sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/add"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/mul"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/logits/bias/rms"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/add"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/logits/bias/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/logits/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/mul_2"
  op: "Mul"
  input: "training/RMSprop/Identity"
  input: "training/RMSprop/gradients/clip_by_value_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/RMSprop/rnn_model/logits/bias/rms"
  input: "^training/RMSprop/RMSprop/update_rnn_model/logits/bias/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/Sqrt"
  op: "Sqrt"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/add_1"
  op: "AddV2"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/Sqrt"
  input: "training/RMSprop/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/truediv"
  op: "RealDiv"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/mul_2"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "rnn_model/logits/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/sub"
  op: "Sub"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/ReadVariableOp_1"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "rnn_model/logits/bias"
  input: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/update_rnn_model/logits/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "rnn_model/logits/bias"
  input: "^training/RMSprop/RMSprop/update_rnn_model/logits/bias/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn_model/logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/Const"
  op: "Const"
  input: "^training/RMSprop/RMSprop/update_rnn_model/logits/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/logits/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/AssignVariableOp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "global_step"
  input: "training/RMSprop/RMSprop/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/RMSprop/RMSprop/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^training/RMSprop/RMSprop/AssignAddVariableOp"
  input: "^training/RMSprop/RMSprop/update_rnn_model/logits/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/logits/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/bias/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/bias_1/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/kernel_1/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel/AssignVariableOp_1"
  input: "^training/RMSprop/RMSprop/update_rnn_model/rnn/recurrent_kernel_1/AssignVariableOp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/group_deps"
  op: "NoOp"
  input: "^training/RMSprop/RMSprop/AssignAddVariableOp"
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "head/losses/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^rnn_model/logits/bias/Assign"
  input: "^rnn_model/logits/kernel/Assign"
  input: "^rnn_model/rnn/bias/Assign"
  input: "^rnn_model/rnn/bias_1/Assign"
  input: "^rnn_model/rnn/kernel/Assign"
  input: "^rnn_model/rnn/kernel_1/Assign"
  input: "^rnn_model/rnn/recurrent_kernel/Assign"
  input: "^rnn_model/rnn/recurrent_kernel_1/Assign"
  input: "^training/RMSprop/decay/Assign"
  input: "^training/RMSprop/learning_rate/Assign"
  input: "^training/RMSprop/momentum/Assign"
  input: "^training/RMSprop/rho/Assign"
  input: "^training/RMSprop/rnn_model/logits/bias/rms/Assign"
  input: "^training/RMSprop/rnn_model/logits/kernel/rms/Assign"
  input: "^training/RMSprop/rnn_model/rnn/bias/rms/Assign"
  input: "^training/RMSprop/rnn_model/rnn/bias_1/rms/Assign"
  input: "^training/RMSprop/rnn_model/rnn/kernel/rms/Assign"
  input: "^training/RMSprop/rnn_model/rnn/kernel_1/rms/Assign"
  input: "^training/RMSprop/rnn_model/rnn/recurrent_kernel/rms/Assign"
  input: "^training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "rnn_model/logits/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "rnn_model/logits/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rho"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/bias/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/logits/kernel/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/logits/bias/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 21
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: "global_step"
        string_val: "rnn_model/rnn/kernel"
        string_val: "rnn_model/rnn/recurrent_kernel"
        string_val: "rnn_model/rnn/bias"
        string_val: "rnn_model/rnn/kernel_1"
        string_val: "rnn_model/rnn/recurrent_kernel_1"
        string_val: "rnn_model/rnn/bias_1"
        string_val: "rnn_model/logits/kernel"
        string_val: "rnn_model/logits/bias"
        string_val: "training/RMSprop/decay"
        string_val: "training/RMSprop/learning_rate"
        string_val: "training/RMSprop/momentum"
        string_val: "training/RMSprop/rho"
        string_val: "training/RMSprop/rnn_model/rnn/kernel/rms"
        string_val: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
        string_val: "training/RMSprop/rnn_model/rnn/bias/rms"
        string_val: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
        string_val: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
        string_val: "training/RMSprop/rnn_model/rnn/bias_1/rms"
        string_val: "training/RMSprop/rnn_model/logits/kernel/rms"
        string_val: "training/RMSprop/rnn_model/logits/bias/rms"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/recurrent_kernel_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "rnn_model/rnn/bias_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "rnn_model/logits/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "rnn_model/logits/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/decay"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/learning_rate"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/momentum"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rho"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/bias/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/logits/kernel/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "training/RMSprop/rnn_model/logits/bias/rms"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 21
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: "global_step"
        string_val: "rnn_model/rnn/kernel"
        string_val: "rnn_model/rnn/recurrent_kernel"
        string_val: "rnn_model/rnn/bias"
        string_val: "rnn_model/rnn/kernel_1"
        string_val: "rnn_model/rnn/recurrent_kernel_1"
        string_val: "rnn_model/rnn/bias_1"
        string_val: "rnn_model/logits/kernel"
        string_val: "rnn_model/logits/bias"
        string_val: "training/RMSprop/decay"
        string_val: "training/RMSprop/learning_rate"
        string_val: "training/RMSprop/momentum"
        string_val: "training/RMSprop/rho"
        string_val: "training/RMSprop/rnn_model/rnn/kernel/rms"
        string_val: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
        string_val: "training/RMSprop/rnn_model/rnn/bias/rms"
        string_val: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
        string_val: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
        string_val: "training/RMSprop/rnn_model/rnn/bias_1/rms"
        string_val: "training/RMSprop/rnn_model/logits/kernel/rms"
        string_val: "training/RMSprop/rnn_model/logits/bias/rms"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "rnn_model/sequence_input_layer/sequence_length"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_50cc8d1be1f645539380b42f27bfc167/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: "global_step"
        string_val: "rnn_model/logits/bias"
        string_val: "rnn_model/logits/kernel"
        string_val: "rnn_model/rnn/bias"
        string_val: "rnn_model/rnn/bias_1"
        string_val: "rnn_model/rnn/kernel"
        string_val: "rnn_model/rnn/kernel_1"
        string_val: "rnn_model/rnn/recurrent_kernel"
        string_val: "rnn_model/rnn/recurrent_kernel_1"
        string_val: "training/RMSprop/decay"
        string_val: "training/RMSprop/learning_rate"
        string_val: "training/RMSprop/momentum"
        string_val: "training/RMSprop/rho"
        string_val: "training/RMSprop/rnn_model/logits/bias/rms"
        string_val: "training/RMSprop/rnn_model/logits/kernel/rms"
        string_val: "training/RMSprop/rnn_model/rnn/bias/rms"
        string_val: "training/RMSprop/rnn_model/rnn/bias_1/rms"
        string_val: "training/RMSprop/rnn_model/rnn/kernel/rms"
        string_val: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
        string_val: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
        string_val: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step/Read/ReadVariableOp"
  input: "rnn_model/logits/bias/Read/ReadVariableOp"
  input: "rnn_model/logits/kernel/Read/ReadVariableOp"
  input: "rnn_model/rnn/bias/Read/ReadVariableOp"
  input: "rnn_model/rnn/bias_1/Read/ReadVariableOp"
  input: "rnn_model/rnn/kernel/Read/ReadVariableOp"
  input: "rnn_model/rnn/kernel_1/Read/ReadVariableOp"
  input: "rnn_model/rnn/recurrent_kernel/Read/ReadVariableOp"
  input: "rnn_model/rnn/recurrent_kernel_1/Read/ReadVariableOp"
  input: "training/RMSprop/decay/Read/ReadVariableOp"
  input: "training/RMSprop/learning_rate/Read/ReadVariableOp"
  input: "training/RMSprop/momentum/Read/ReadVariableOp"
  input: "training/RMSprop/rho/Read/ReadVariableOp"
  input: "training/RMSprop/rnn_model/logits/bias/rms/Read/ReadVariableOp"
  input: "training/RMSprop/rnn_model/logits/kernel/rms/Read/ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias/rms/Read/ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms/Read/ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms/Read/ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms/Read/ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms/Read/ReadVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: "global_step"
        string_val: "rnn_model/logits/bias"
        string_val: "rnn_model/logits/kernel"
        string_val: "rnn_model/rnn/bias"
        string_val: "rnn_model/rnn/bias_1"
        string_val: "rnn_model/rnn/kernel"
        string_val: "rnn_model/rnn/kernel_1"
        string_val: "rnn_model/rnn/recurrent_kernel"
        string_val: "rnn_model/rnn/recurrent_kernel_1"
        string_val: "training/RMSprop/decay"
        string_val: "training/RMSprop/learning_rate"
        string_val: "training/RMSprop/momentum"
        string_val: "training/RMSprop/rho"
        string_val: "training/RMSprop/rnn_model/logits/bias/rms"
        string_val: "training/RMSprop/rnn_model/logits/kernel/rms"
        string_val: "training/RMSprop/rnn_model/rnn/bias/rms"
        string_val: "training/RMSprop/rnn_model/rnn/bias_1/rms"
        string_val: "training/RMSprop/rnn_model/rnn/kernel/rms"
        string_val: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
        string_val: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
        string_val: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 21
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 21
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "rnn_model/logits/bias"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "rnn_model/logits/kernel"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/bias"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/bias_1"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/kernel"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/kernel_1"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/recurrent_kernel"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "rnn_model/rnn/recurrent_kernel_1"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "training/RMSprop/decay"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "training/RMSprop/learning_rate"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "training/RMSprop/momentum"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "training/RMSprop/rho"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/logits/bias/rms"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/logits/kernel/rms"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias/rms"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/bias_1/rms"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel/rms"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/kernel_1/rms"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel/rms"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "training/RMSprop/rnn_model/rnn/recurrent_kernel_1/rms"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "__inference_Dataset_interleave_lambda_7205"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "TensorSliceDataset"
    }
    node_def {
      name: "flat_filenames/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "flat_filenames/shape"
      }
    }
    node_def {
      name: "flat_filenames"
      op: "Reshape"
      input: "args_0"
      input: "flat_filenames/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "flat_filenames"
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "flat_filenames:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "TensorSliceDataset"
      }
    }
    node_def {
      name: "cycle_length"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "cycle_length"
      }
    }
    node_def {
      name: "block_length"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "block_length"
      }
    }
    node_def {
      name: "sloppy"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
      experimental_debug_info {
        original_node_names: "sloppy"
      }
    }
    node_def {
      name: "buffer_output_elements"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2
          }
        }
      }
      experimental_debug_info {
        original_node_names: "buffer_output_elements"
      }
    }
    node_def {
      name: "prefetch_input_elements"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 4
          }
        }
      }
      experimental_debug_info {
        original_node_names: "prefetch_input_elements"
      }
    }
    node_def {
      name: "ParallelInterleaveDataset"
      op: "ParallelInterleaveDataset"
      input: "TensorSliceDataset:handle:0"
      input: "cycle_length:output:0"
      input: "block_length:output:0"
      input: "sloppy:output:0"
      input: "buffer_output_elements:output:0"
      input: "prefetch_input_elements:output:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_tf_data_experimental_parallel_interleave_read_one_file_7146"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParallelInterleaveDataset"
      }
    }
    node_def {
      name: "num_parallel_calls"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "num_parallel_calls"
      }
    }
    node_def {
      name: "ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "ParallelInterleaveDataset:handle:0"
      input: "num_parallel_calls:output:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_map_parse_fn_7201"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_VARIANT
            type: DT_VARIANT
            type: DT_VARIANT
            type: DT_VARIANT
            type: DT_VARIANT
            type: DT_VARIANT
            type: DT_VARIANT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "preserve_cardinality"
        value {
          b: true
        }
      }
      attr {
        key: "sloppy"
        value {
          b: false
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "ParallelMapDataset"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "ParallelMapDataset:handle:0"
      input: "^TensorSliceDataset"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "TensorSliceDataset"
      value: "TensorSliceDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_true_7119"
      input_arg {
        name: "read_readvariableop_global_step"
        type: DT_RESOURCE
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
    }
    node_def {
      name: "Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "read_readvariableop_global_step"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      experimental_debug_info {
        original_node_names: "Read/ReadVariableOp"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Read/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_9_Assert_AssertGuard_false_7845"
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_9_all"
        type: DT_BOOL
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
        type: DT_INT64
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_ohlc_usw_sequence_length"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Condition x == y did not hold element-wise:"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_0"
      }
    }
    node_def {
      name: "Assert/data_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_1"
      }
    }
    node_def {
      name: "Assert/data_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "y (rnn_model/sequence_input_layer/sequence_features/ohlc_usw/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_3"
      }
    }
    node_def {
      name: "Assert"
      op: "Assert"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_9_all"
      input: "Assert/data_0:output:0"
      input: "Assert/data_1:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
      input: "Assert/data_3:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_ohlc_usw_sequence_length"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
            type: DT_INT64
            type: DT_STRING
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
      experimental_debug_info {
        original_node_names: "Assert"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_9_all"
      input: "^Assert"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "Assert/data_0:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "Assert/data_1:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "Assert/data_3:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_rnn_while_body_8245"
      input_arg {
        name: "rnn_model_rnn_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "rnn_model_rnn_while_maximum_iterations_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_6"
        type: DT_FLOAT
      }
      input_arg {
        name: "rnn_model_rnn_strided_slice_1_0"
        type: DT_INT32
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorarrayv2read_1_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_1_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "mul_rnn_model_rnn_dropout_mul_1_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "matmul_readvariableop_rnn_model_rnn_kernel_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "matmul_1_readvariableop_rnn_model_rnn_recurrent_kernel_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "biasadd_readvariableop_rnn_model_rnn_bias_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "mul_4_rnn_model_rnn_dropout_4_mul_1_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "matmul_2_readvariableop_rnn_model_rnn_kernel_1_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "matmul_3_readvariableop_rnn_model_rnn_recurrent_kernel_1_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "biasadd_1_readvariableop_rnn_model_rnn_bias_1_0"
        type: DT_RESOURCE
      }
      input_arg {
        name: "tensorlistpushback_rnn_model_rnn_while_emptytensorlist"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_1_rnn_model_rnn_while_emptytensorlist_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_2_rnn_model_rnn_while_emptytensorlist_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_3_rnn_model_rnn_while_emptytensorlist_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_4_rnn_model_rnn_while_emptytensorlist_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_5_rnn_model_rnn_while_emptytensorlist_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_6_rnn_model_rnn_while_emptytensorlist_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_7_rnn_model_rnn_while_emptytensorlist_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_8_rnn_model_rnn_while_emptytensorlist_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_9_rnn_model_rnn_while_emptytensorlist_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_10_rnn_model_rnn_while_emptytensorlist_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_11_rnn_model_rnn_while_emptytensorlist_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_12_rnn_model_rnn_while_emptytensorlist_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_13_rnn_model_rnn_while_emptytensorlist_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_14_rnn_model_rnn_while_emptytensorlist_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_15_rnn_model_rnn_while_emptytensorlist_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_16_rnn_model_rnn_while_emptytensorlist_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_17_rnn_model_rnn_while_emptytensorlist_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_18_rnn_model_rnn_while_emptytensorlist_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_19_rnn_model_rnn_while_emptytensorlist_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_20_rnn_model_rnn_while_emptytensorlist_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_21_rnn_model_rnn_while_emptytensorlist_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_22_rnn_model_rnn_while_emptytensorlist_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_23_rnn_model_rnn_while_emptytensorlist_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_24_rnn_model_rnn_while_emptytensorlist_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_25_rnn_model_rnn_while_emptytensorlist_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_26_rnn_model_rnn_while_emptytensorlist_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_27_rnn_model_rnn_while_emptytensorlist_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_28_rnn_model_rnn_while_emptytensorlist_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_29_rnn_model_rnn_while_emptytensorlist_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_30_rnn_model_rnn_while_emptytensorlist_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_31_rnn_model_rnn_while_emptytensorlist_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_32_rnn_model_rnn_while_emptytensorlist_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_33_rnn_model_rnn_while_emptytensorlist_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_34_rnn_model_rnn_while_emptytensorlist_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_35_rnn_model_rnn_while_emptytensorlist_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_36_rnn_model_rnn_while_emptytensorlist_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_37_rnn_model_rnn_while_emptytensorlist_37"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_38_rnn_model_rnn_while_emptytensorlist_38"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_39_rnn_model_rnn_while_emptytensorlist_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_40_rnn_model_rnn_while_emptytensorlist_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_41_rnn_model_rnn_while_emptytensorlist_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_42_rnn_model_rnn_while_emptytensorlist_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_43_rnn_model_rnn_while_emptytensorlist_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_44_rnn_model_rnn_while_emptytensorlist_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_45_rnn_model_rnn_while_emptytensorlist_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_46_rnn_model_rnn_while_emptytensorlist_46"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_47_rnn_model_rnn_while_emptytensorlist_47"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_48_rnn_model_rnn_while_emptytensorlist_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_49_rnn_model_rnn_while_emptytensorlist_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_50_rnn_model_rnn_while_emptytensorlist_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_51_rnn_model_rnn_while_emptytensorlist_51"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_52_rnn_model_rnn_while_emptytensorlist_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_53_rnn_model_rnn_while_emptytensorlist_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_54_rnn_model_rnn_while_emptytensorlist_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_55_rnn_model_rnn_while_emptytensorlist_55"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_56_rnn_model_rnn_while_emptytensorlist_56"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_57_rnn_model_rnn_while_emptytensorlist_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_58_rnn_model_rnn_while_emptytensorlist_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_59_rnn_model_rnn_while_emptytensorlist_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_60_rnn_model_rnn_while_emptytensorlist_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_61_rnn_model_rnn_while_emptytensorlist_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_62_rnn_model_rnn_while_emptytensorlist_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_63_rnn_model_rnn_while_emptytensorlist_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_64_rnn_model_rnn_while_emptytensorlist_64"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_65_rnn_model_rnn_while_emptytensorlist_65"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_66_rnn_model_rnn_while_emptytensorlist_66"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_67_rnn_model_rnn_while_emptytensorlist_67"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_68_rnn_model_rnn_while_emptytensorlist_68"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_69_rnn_model_rnn_while_emptytensorlist_69"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_70_rnn_model_rnn_while_emptytensorlist_70"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_71_rnn_model_rnn_while_emptytensorlist_71"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_72_rnn_model_rnn_while_emptytensorlist_72"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_73_rnn_model_rnn_while_emptytensorlist_73"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_74_rnn_model_rnn_while_emptytensorlist_74"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_75_rnn_model_rnn_while_emptytensorlist_75"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_76_rnn_model_rnn_while_emptytensorlist_76"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_77_rnn_model_rnn_while_emptytensorlist_77"
        type: DT_VARIANT
      }
      output_arg {
        name: "add_5"
        type: DT_INT32
      }
      output_arg {
        name: "rnn_model_rnn_while_maximum_iterations"
        type: DT_INT32
      }
      output_arg {
        name: "add_4"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "selectv2"
        type: DT_FLOAT
      }
      output_arg {
        name: "selectv2_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "selectv2_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "selectv2_3"
        type: DT_FLOAT
      }
      output_arg {
        name: "selectv2_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "rnn_model_rnn_strided_slice_1"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorarrayv2read_1_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_1_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "mul_rnn_model_rnn_dropout_mul_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "matmul_readvariableop_rnn_model_rnn_kernel"
        type: DT_RESOURCE
      }
      output_arg {
        name: "matmul_1_readvariableop_rnn_model_rnn_recurrent_kernel"
        type: DT_RESOURCE
      }
      output_arg {
        name: "biasadd_readvariableop_rnn_model_rnn_bias"
        type: DT_RESOURCE
      }
      output_arg {
        name: "mul_4_rnn_model_rnn_dropout_4_mul_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "matmul_2_readvariableop_rnn_model_rnn_kernel_1"
        type: DT_RESOURCE
      }
      output_arg {
        name: "matmul_3_readvariableop_rnn_model_rnn_recurrent_kernel_1"
        type: DT_RESOURCE
      }
      output_arg {
        name: "biasadd_1_readvariableop_rnn_model_rnn_bias_1"
        type: DT_RESOURCE
      }
      output_arg {
        name: "tensorlistpushback"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_6"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_7"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_8"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_9"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_10"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_11"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_12"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_13"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_14"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_15"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_16"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_17"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_18"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_19"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_20"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_21"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_22"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_23"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_24"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_25"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_26"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_27"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_28"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_29"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_30"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_31"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_32"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_33"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_34"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_35"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_36"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_37"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_38"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_39"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_40"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_41"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_42"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_43"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_44"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_45"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_46"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_47"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_48"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_49"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_50"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_51"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_52"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_53"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_54"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_55"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_56"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_57"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_58"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_59"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_60"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_61"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_62"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_63"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_64"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_65"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_66"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_67"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_68"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_69"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_70"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_71"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_72"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_73"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_74"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_75"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_76"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_77"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\007\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "TensorArrayV2Read/TensorListGetItem/element_shape"
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorArrayV2Read/TensorListGetItem"
      }
    }
    node_def {
      name: "TensorArrayV2Read_1/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\001\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "TensorArrayV2Read_1/TensorListGetItem/element_shape"
      }
    }
    node_def {
      name: "TensorArrayV2Read_1/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_1_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_1_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read_1/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "TensorArrayV2Read_1/TensorListGetItem"
      }
    }
    node_def {
      name: "mul"
      op: "Mul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "mul_rnn_model_rnn_dropout_mul_1_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "mul"
      }
    }
    node_def {
      name: "MatMul/ReadVariableOp"
      op: "ReadVariableOp"
      input: "matmul_readvariableop_rnn_model_rnn_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "MatMul/ReadVariableOp"
      }
    }
    node_def {
      name: "MatMul"
      op: "MatMul"
      input: "mul:z:0"
      input: "MatMul/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "MatMul"
      }
    }
    node_def {
      name: "MatMul_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "matmul_1_readvariableop_rnn_model_rnn_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "MatMul_1/ReadVariableOp"
      }
    }
    node_def {
      name: "MatMul_1"
      op: "MatMul"
      input: "placeholder_3"
      input: "MatMul_1/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "MatMul_1"
      }
    }
    node_def {
      name: "add"
      op: "AddV2"
      input: "MatMul:product:0"
      input: "MatMul_1:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "add"
      }
    }
    node_def {
      name: "BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "biasadd_readvariableop_rnn_model_rnn_bias_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "BiasAdd/ReadVariableOp"
      }
    }
    node_def {
      name: "BiasAdd"
      op: "BiasAdd"
      input: "add:z:0"
      input: "BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "BiasAdd"
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const"
      }
    }
    node_def {
      name: "split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "split/split_dim"
      }
    }
    node_def {
      name: "split"
      op: "Split"
      input: "split/split_dim:output:0"
      input: "BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
      experimental_debug_info {
        original_node_names: "split"
      }
    }
    node_def {
      name: "Sigmoid"
      op: "Sigmoid"
      input: "split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Sigmoid"
      }
    }
    node_def {
      name: "Sigmoid_1"
      op: "Sigmoid"
      input: "split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Sigmoid_1"
      }
    }
    node_def {
      name: "mul_1"
      op: "Mul"
      input: "Sigmoid_1:y:0"
      input: "placeholder_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "mul_1"
      }
    }
    node_def {
      name: "Tanh"
      op: "Tanh"
      input: "split:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tanh"
      }
    }
    node_def {
      name: "mul_2"
      op: "Mul"
      input: "Sigmoid:y:0"
      input: "Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "mul_2"
      }
    }
    node_def {
      name: "add_1"
      op: "AddV2"
      input: "mul_1:z:0"
      input: "mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "add_1"
      }
    }
    node_def {
      name: "Sigmoid_2"
      op: "Sigmoid"
      input: "split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Sigmoid_2"
      }
    }
    node_def {
      name: "Tanh_1"
      op: "Tanh"
      input: "add_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tanh_1"
      }
    }
    node_def {
      name: "mul_3"
      op: "Mul"
      input: "Sigmoid_2:y:0"
      input: "Tanh_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "mul_3"
      }
    }
    node_def {
      name: "mul_4"
      op: "Mul"
      input: "mul_3:z:0"
      input: "mul_4_rnn_model_rnn_dropout_4_mul_1_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "mul_4"
      }
    }
    node_def {
      name: "MatMul_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "matmul_2_readvariableop_rnn_model_rnn_kernel_1_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "MatMul_2/ReadVariableOp"
      }
    }
    node_def {
      name: "MatMul_2"
      op: "MatMul"
      input: "mul_4:z:0"
      input: "MatMul_2/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "MatMul_2"
      }
    }
    node_def {
      name: "MatMul_3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "matmul_3_readvariableop_rnn_model_rnn_recurrent_kernel_1_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "MatMul_3/ReadVariableOp"
      }
    }
    node_def {
      name: "MatMul_3"
      op: "MatMul"
      input: "placeholder_5"
      input: "MatMul_3/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "MatMul_3"
      }
    }
    node_def {
      name: "add_2"
      op: "AddV2"
      input: "MatMul_2:product:0"
      input: "MatMul_3:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "add_2"
      }
    }
    node_def {
      name: "BiasAdd_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "biasadd_1_readvariableop_rnn_model_rnn_bias_1_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "BiasAdd_1/ReadVariableOp"
      }
    }
    node_def {
      name: "BiasAdd_1"
      op: "BiasAdd"
      input: "add_2:z:0"
      input: "BiasAdd_1/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "BiasAdd_1"
      }
    }
    node_def {
      name: "Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Const_1"
      }
    }
    node_def {
      name: "split_1/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "split_1/split_dim"
      }
    }
    node_def {
      name: "split_1"
      op: "Split"
      input: "split_1/split_dim:output:0"
      input: "BiasAdd_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
      experimental_debug_info {
        original_node_names: "split_1"
      }
    }
    node_def {
      name: "Sigmoid_3"
      op: "Sigmoid"
      input: "split_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Sigmoid_3"
      }
    }
    node_def {
      name: "Sigmoid_4"
      op: "Sigmoid"
      input: "split_1:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Sigmoid_4"
      }
    }
    node_def {
      name: "mul_5"
      op: "Mul"
      input: "Sigmoid_4:y:0"
      input: "placeholder_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "mul_5"
      }
    }
    node_def {
      name: "Tanh_2"
      op: "Tanh"
      input: "split_1:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tanh_2"
      }
    }
    node_def {
      name: "mul_6"
      op: "Mul"
      input: "Sigmoid_3:y:0"
      input: "Tanh_2:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "mul_6"
      }
    }
    node_def {
      name: "add_3"
      op: "AddV2"
      input: "mul_5:z:0"
      input: "mul_6:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "add_3"
      }
    }
    node_def {
      name: "Sigmoid_5"
      op: "Sigmoid"
      input: "split_1:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Sigmoid_5"
      }
    }
    node_def {
      name: "Tanh_3"
      op: "Tanh"
      input: "add_3:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tanh_3"
      }
    }
    node_def {
      name: "mul_7"
      op: "Mul"
      input: "Sigmoid_5:y:0"
      input: "Tanh_3:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "mul_7"
      }
    }
    node_def {
      name: "Tile/multiples"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tile/multiples"
      }
    }
    node_def {
      name: "Tile"
      op: "Tile"
      input: "TensorArrayV2Read_1/TensorListGetItem:item:0"
      input: "Tile/multiples:output:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tile"
      }
    }
    node_def {
      name: "SelectV2"
      op: "SelectV2"
      input: "Tile:output:0"
      input: "mul_7:z:0"
      input: "placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "SelectV2"
      }
    }
    node_def {
      name: "Tile_1/multiples"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tile_1/multiples"
      }
    }
    node_def {
      name: "Tile_1"
      op: "Tile"
      input: "TensorArrayV2Read_1/TensorListGetItem:item:0"
      input: "Tile_1/multiples:output:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tile_1"
      }
    }
    node_def {
      name: "Tile_2/multiples"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tile_2/multiples"
      }
    }
    node_def {
      name: "Tile_2"
      op: "Tile"
      input: "TensorArrayV2Read_1/TensorListGetItem:item:0"
      input: "Tile_2/multiples:output:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tile_2"
      }
    }
    node_def {
      name: "Tile_3/multiples"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tile_3/multiples"
      }
    }
    node_def {
      name: "Tile_3"
      op: "Tile"
      input: "TensorArrayV2Read_1/TensorListGetItem:item:0"
      input: "Tile_3/multiples:output:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tile_3"
      }
    }
    node_def {
      name: "Tile_4/multiples"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tile_4/multiples"
      }
    }
    node_def {
      name: "Tile_4"
      op: "Tile"
      input: "TensorArrayV2Read_1/TensorListGetItem:item:0"
      input: "Tile_4/multiples:output:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Tile_4"
      }
    }
    node_def {
      name: "SelectV2_1"
      op: "SelectV2"
      input: "Tile_1:output:0"
      input: "mul_3:z:0"
      input: "placeholder_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "SelectV2_1"
      }
    }
    node_def {
      name: "SelectV2_2"
      op: "SelectV2"
      input: "Tile_2:output:0"
      input: "add_1:z:0"
      input: "placeholder_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "SelectV2_2"
      }
    }
    node_def {
      name: "SelectV2_3"
      op: "SelectV2"
      input: "Tile_3:output:0"
      input: "mul_7:z:0"
      input: "placeholder_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "SelectV2_3"
      }
    }
    node_def {
      name: "SelectV2_4"
      op: "SelectV2"
      input: "Tile_4:output:0"
      input: "add_3:z:0"
      input: "placeholder_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "SelectV2_4"
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "placeholder"
      input: "SelectV2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorArrayV2Write/TensorListSetItem"
      }
    }
    node_def {
      name: "add_4/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "add_4/y"
      }
    }
    node_def {
      name: "add_4_0"
      op: "AddV2"
      input: "placeholder"
      input: "add_4/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "add_4"
      }
    }
    node_def {
      name: "add_5/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "add_5/y"
      }
    }
    node_def {
      name: "add_5_0"
      op: "AddV2"
      input: "rnn_model_rnn_while_loop_counter"
      input: "add_5/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "add_5"
      }
    }
    node_def {
      name: "TensorListPushBack"
      op: "TensorListPushBack"
      input: "tensorlistpushback_rnn_model_rnn_while_emptytensorlist"
      input: "rnn_model_rnn_while_maximum_iterations_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack"
      }
    }
    node_def {
      name: "TensorListPushBack_1"
      op: "TensorListPushBack"
      input: "tensorlistpushback_1_rnn_model_rnn_while_emptytensorlist_1"
      input: "placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_1"
      }
    }
    node_def {
      name: "TensorListPushBack_2"
      op: "TensorListPushBack"
      input: "tensorlistpushback_2_rnn_model_rnn_while_emptytensorlist_2"
      input: "placeholder_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_2"
      }
    }
    node_def {
      name: "TensorListPushBack_3"
      op: "TensorListPushBack"
      input: "tensorlistpushback_3_rnn_model_rnn_while_emptytensorlist_3"
      input: "placeholder_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_3"
      }
    }
    node_def {
      name: "TensorListPushBack_4"
      op: "TensorListPushBack"
      input: "tensorlistpushback_4_rnn_model_rnn_while_emptytensorlist_4"
      input: "placeholder_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_4"
      }
    }
    node_def {
      name: "TensorListPushBack_5"
      op: "TensorListPushBack"
      input: "tensorlistpushback_5_rnn_model_rnn_while_emptytensorlist_5"
      input: "placeholder_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_5"
      }
    }
    node_def {
      name: "TensorListPushBack_6"
      op: "TensorListPushBack"
      input: "tensorlistpushback_6_rnn_model_rnn_while_emptytensorlist_6"
      input: "placeholder_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_6"
      }
    }
    node_def {
      name: "TensorListPushBack_7"
      op: "TensorListPushBack"
      input: "tensorlistpushback_7_rnn_model_rnn_while_emptytensorlist_7"
      input: "placeholder_6"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_7"
      }
    }
    node_def {
      name: "TensorListPushBack_8"
      op: "TensorListPushBack"
      input: "tensorlistpushback_8_rnn_model_rnn_while_emptytensorlist_8"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_8"
      }
    }
    node_def {
      name: "TensorListPushBack_9"
      op: "TensorListPushBack"
      input: "tensorlistpushback_9_rnn_model_rnn_while_emptytensorlist_9"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_9"
      }
    }
    node_def {
      name: "TensorListPushBack_10"
      op: "TensorListPushBack"
      input: "tensorlistpushback_10_rnn_model_rnn_while_emptytensorlist_10"
      input: "TensorArrayV2Read_1/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_10"
      }
    }
    node_def {
      name: "TensorListPushBack_11"
      op: "TensorListPushBack"
      input: "tensorlistpushback_11_rnn_model_rnn_while_emptytensorlist_11"
      input: "TensorArrayV2Read_1/TensorListGetItem:item:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_11"
      }
    }
    node_def {
      name: "TensorListPushBack_12"
      op: "TensorListPushBack"
      input: "tensorlistpushback_12_rnn_model_rnn_while_emptytensorlist_12"
      input: "mul:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_12"
      }
    }
    node_def {
      name: "TensorListPushBack_13"
      op: "TensorListPushBack"
      input: "tensorlistpushback_13_rnn_model_rnn_while_emptytensorlist_13"
      input: "MatMul/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_13"
      }
    }
    node_def {
      name: "TensorListPushBack_14"
      op: "TensorListPushBack"
      input: "tensorlistpushback_14_rnn_model_rnn_while_emptytensorlist_14"
      input: "MatMul:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_14"
      }
    }
    node_def {
      name: "TensorListPushBack_15"
      op: "TensorListPushBack"
      input: "tensorlistpushback_15_rnn_model_rnn_while_emptytensorlist_15"
      input: "MatMul_1/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_15"
      }
    }
    node_def {
      name: "TensorListPushBack_16"
      op: "TensorListPushBack"
      input: "tensorlistpushback_16_rnn_model_rnn_while_emptytensorlist_16"
      input: "MatMul_1:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_16"
      }
    }
    node_def {
      name: "TensorListPushBack_17"
      op: "TensorListPushBack"
      input: "tensorlistpushback_17_rnn_model_rnn_while_emptytensorlist_17"
      input: "add:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_17"
      }
    }
    node_def {
      name: "TensorListPushBack_18"
      op: "TensorListPushBack"
      input: "tensorlistpushback_18_rnn_model_rnn_while_emptytensorlist_18"
      input: "BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_18"
      }
    }
    node_def {
      name: "TensorListPushBack_19"
      op: "TensorListPushBack"
      input: "tensorlistpushback_19_rnn_model_rnn_while_emptytensorlist_19"
      input: "BiasAdd:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_19"
      }
    }
    node_def {
      name: "TensorListPushBack_20"
      op: "TensorListPushBack"
      input: "tensorlistpushback_20_rnn_model_rnn_while_emptytensorlist_20"
      input: "Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_20"
      }
    }
    node_def {
      name: "TensorListPushBack_21"
      op: "TensorListPushBack"
      input: "tensorlistpushback_21_rnn_model_rnn_while_emptytensorlist_21"
      input: "split/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_21"
      }
    }
    node_def {
      name: "TensorListPushBack_22"
      op: "TensorListPushBack"
      input: "tensorlistpushback_22_rnn_model_rnn_while_emptytensorlist_22"
      input: "split:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_22"
      }
    }
    node_def {
      name: "TensorListPushBack_23"
      op: "TensorListPushBack"
      input: "tensorlistpushback_23_rnn_model_rnn_while_emptytensorlist_23"
      input: "split:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_23"
      }
    }
    node_def {
      name: "TensorListPushBack_24"
      op: "TensorListPushBack"
      input: "tensorlistpushback_24_rnn_model_rnn_while_emptytensorlist_24"
      input: "split:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_24"
      }
    }
    node_def {
      name: "TensorListPushBack_25"
      op: "TensorListPushBack"
      input: "tensorlistpushback_25_rnn_model_rnn_while_emptytensorlist_25"
      input: "split:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_25"
      }
    }
    node_def {
      name: "TensorListPushBack_26"
      op: "TensorListPushBack"
      input: "tensorlistpushback_26_rnn_model_rnn_while_emptytensorlist_26"
      input: "Sigmoid:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_26"
      }
    }
    node_def {
      name: "TensorListPushBack_27"
      op: "TensorListPushBack"
      input: "tensorlistpushback_27_rnn_model_rnn_while_emptytensorlist_27"
      input: "Sigmoid_1:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_27"
      }
    }
    node_def {
      name: "TensorListPushBack_28"
      op: "TensorListPushBack"
      input: "tensorlistpushback_28_rnn_model_rnn_while_emptytensorlist_28"
      input: "mul_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_28"
      }
    }
    node_def {
      name: "TensorListPushBack_29"
      op: "TensorListPushBack"
      input: "tensorlistpushback_29_rnn_model_rnn_while_emptytensorlist_29"
      input: "Tanh:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_29"
      }
    }
    node_def {
      name: "TensorListPushBack_30"
      op: "TensorListPushBack"
      input: "tensorlistpushback_30_rnn_model_rnn_while_emptytensorlist_30"
      input: "mul_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_30"
      }
    }
    node_def {
      name: "TensorListPushBack_31"
      op: "TensorListPushBack"
      input: "tensorlistpushback_31_rnn_model_rnn_while_emptytensorlist_31"
      input: "add_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_31"
      }
    }
    node_def {
      name: "TensorListPushBack_32"
      op: "TensorListPushBack"
      input: "tensorlistpushback_32_rnn_model_rnn_while_emptytensorlist_32"
      input: "Sigmoid_2:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_32"
      }
    }
    node_def {
      name: "TensorListPushBack_33"
      op: "TensorListPushBack"
      input: "tensorlistpushback_33_rnn_model_rnn_while_emptytensorlist_33"
      input: "Tanh_1:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_33"
      }
    }
    node_def {
      name: "TensorListPushBack_34"
      op: "TensorListPushBack"
      input: "tensorlistpushback_34_rnn_model_rnn_while_emptytensorlist_34"
      input: "mul_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_34"
      }
    }
    node_def {
      name: "TensorListPushBack_35"
      op: "TensorListPushBack"
      input: "tensorlistpushback_35_rnn_model_rnn_while_emptytensorlist_35"
      input: "mul_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_35"
      }
    }
    node_def {
      name: "TensorListPushBack_36"
      op: "TensorListPushBack"
      input: "tensorlistpushback_36_rnn_model_rnn_while_emptytensorlist_36"
      input: "MatMul_2/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_36"
      }
    }
    node_def {
      name: "TensorListPushBack_37"
      op: "TensorListPushBack"
      input: "tensorlistpushback_37_rnn_model_rnn_while_emptytensorlist_37"
      input: "MatMul_2:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_37"
      }
    }
    node_def {
      name: "TensorListPushBack_38"
      op: "TensorListPushBack"
      input: "tensorlistpushback_38_rnn_model_rnn_while_emptytensorlist_38"
      input: "MatMul_3/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_38"
      }
    }
    node_def {
      name: "TensorListPushBack_39"
      op: "TensorListPushBack"
      input: "tensorlistpushback_39_rnn_model_rnn_while_emptytensorlist_39"
      input: "MatMul_3:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_39"
      }
    }
    node_def {
      name: "TensorListPushBack_40"
      op: "TensorListPushBack"
      input: "tensorlistpushback_40_rnn_model_rnn_while_emptytensorlist_40"
      input: "add_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_40"
      }
    }
    node_def {
      name: "TensorListPushBack_41"
      op: "TensorListPushBack"
      input: "tensorlistpushback_41_rnn_model_rnn_while_emptytensorlist_41"
      input: "BiasAdd_1/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_41"
      }
    }
    node_def {
      name: "TensorListPushBack_42"
      op: "TensorListPushBack"
      input: "tensorlistpushback_42_rnn_model_rnn_while_emptytensorlist_42"
      input: "BiasAdd_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_42"
      }
    }
    node_def {
      name: "TensorListPushBack_43"
      op: "TensorListPushBack"
      input: "tensorlistpushback_43_rnn_model_rnn_while_emptytensorlist_43"
      input: "Const_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_43"
      }
    }
    node_def {
      name: "TensorListPushBack_44"
      op: "TensorListPushBack"
      input: "tensorlistpushback_44_rnn_model_rnn_while_emptytensorlist_44"
      input: "split_1/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_44"
      }
    }
    node_def {
      name: "TensorListPushBack_45"
      op: "TensorListPushBack"
      input: "tensorlistpushback_45_rnn_model_rnn_while_emptytensorlist_45"
      input: "split_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_45"
      }
    }
    node_def {
      name: "TensorListPushBack_46"
      op: "TensorListPushBack"
      input: "tensorlistpushback_46_rnn_model_rnn_while_emptytensorlist_46"
      input: "split_1:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_46"
      }
    }
    node_def {
      name: "TensorListPushBack_47"
      op: "TensorListPushBack"
      input: "tensorlistpushback_47_rnn_model_rnn_while_emptytensorlist_47"
      input: "split_1:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_47"
      }
    }
    node_def {
      name: "TensorListPushBack_48"
      op: "TensorListPushBack"
      input: "tensorlistpushback_48_rnn_model_rnn_while_emptytensorlist_48"
      input: "split_1:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_48"
      }
    }
    node_def {
      name: "TensorListPushBack_49"
      op: "TensorListPushBack"
      input: "tensorlistpushback_49_rnn_model_rnn_while_emptytensorlist_49"
      input: "Sigmoid_3:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_49"
      }
    }
    node_def {
      name: "TensorListPushBack_50"
      op: "TensorListPushBack"
      input: "tensorlistpushback_50_rnn_model_rnn_while_emptytensorlist_50"
      input: "Sigmoid_4:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_50"
      }
    }
    node_def {
      name: "TensorListPushBack_51"
      op: "TensorListPushBack"
      input: "tensorlistpushback_51_rnn_model_rnn_while_emptytensorlist_51"
      input: "mul_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_51"
      }
    }
    node_def {
      name: "TensorListPushBack_52"
      op: "TensorListPushBack"
      input: "tensorlistpushback_52_rnn_model_rnn_while_emptytensorlist_52"
      input: "Tanh_2:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_52"
      }
    }
    node_def {
      name: "TensorListPushBack_53"
      op: "TensorListPushBack"
      input: "tensorlistpushback_53_rnn_model_rnn_while_emptytensorlist_53"
      input: "mul_6:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_53"
      }
    }
    node_def {
      name: "TensorListPushBack_54"
      op: "TensorListPushBack"
      input: "tensorlistpushback_54_rnn_model_rnn_while_emptytensorlist_54"
      input: "add_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_54"
      }
    }
    node_def {
      name: "TensorListPushBack_55"
      op: "TensorListPushBack"
      input: "tensorlistpushback_55_rnn_model_rnn_while_emptytensorlist_55"
      input: "Sigmoid_5:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_55"
      }
    }
    node_def {
      name: "TensorListPushBack_56"
      op: "TensorListPushBack"
      input: "tensorlistpushback_56_rnn_model_rnn_while_emptytensorlist_56"
      input: "Tanh_3:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_56"
      }
    }
    node_def {
      name: "TensorListPushBack_57"
      op: "TensorListPushBack"
      input: "tensorlistpushback_57_rnn_model_rnn_while_emptytensorlist_57"
      input: "mul_7:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_57"
      }
    }
    node_def {
      name: "TensorListPushBack_58"
      op: "TensorListPushBack"
      input: "tensorlistpushback_58_rnn_model_rnn_while_emptytensorlist_58"
      input: "Tile/multiples:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_58"
      }
    }
    node_def {
      name: "TensorListPushBack_59"
      op: "TensorListPushBack"
      input: "tensorlistpushback_59_rnn_model_rnn_while_emptytensorlist_59"
      input: "Tile:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_59"
      }
    }
    node_def {
      name: "TensorListPushBack_60"
      op: "TensorListPushBack"
      input: "tensorlistpushback_60_rnn_model_rnn_while_emptytensorlist_60"
      input: "SelectV2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_60"
      }
    }
    node_def {
      name: "TensorListPushBack_61"
      op: "TensorListPushBack"
      input: "tensorlistpushback_61_rnn_model_rnn_while_emptytensorlist_61"
      input: "Tile_1/multiples:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_61"
      }
    }
    node_def {
      name: "TensorListPushBack_62"
      op: "TensorListPushBack"
      input: "tensorlistpushback_62_rnn_model_rnn_while_emptytensorlist_62"
      input: "Tile_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_62"
      }
    }
    node_def {
      name: "TensorListPushBack_63"
      op: "TensorListPushBack"
      input: "tensorlistpushback_63_rnn_model_rnn_while_emptytensorlist_63"
      input: "Tile_2/multiples:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_63"
      }
    }
    node_def {
      name: "TensorListPushBack_64"
      op: "TensorListPushBack"
      input: "tensorlistpushback_64_rnn_model_rnn_while_emptytensorlist_64"
      input: "Tile_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_64"
      }
    }
    node_def {
      name: "TensorListPushBack_65"
      op: "TensorListPushBack"
      input: "tensorlistpushback_65_rnn_model_rnn_while_emptytensorlist_65"
      input: "Tile_3/multiples:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_65"
      }
    }
    node_def {
      name: "TensorListPushBack_66"
      op: "TensorListPushBack"
      input: "tensorlistpushback_66_rnn_model_rnn_while_emptytensorlist_66"
      input: "Tile_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_66"
      }
    }
    node_def {
      name: "TensorListPushBack_67"
      op: "TensorListPushBack"
      input: "tensorlistpushback_67_rnn_model_rnn_while_emptytensorlist_67"
      input: "Tile_4/multiples:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_67"
      }
    }
    node_def {
      name: "TensorListPushBack_68"
      op: "TensorListPushBack"
      input: "tensorlistpushback_68_rnn_model_rnn_while_emptytensorlist_68"
      input: "Tile_4:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_68"
      }
    }
    node_def {
      name: "TensorListPushBack_69"
      op: "TensorListPushBack"
      input: "tensorlistpushback_69_rnn_model_rnn_while_emptytensorlist_69"
      input: "SelectV2_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_69"
      }
    }
    node_def {
      name: "TensorListPushBack_70"
      op: "TensorListPushBack"
      input: "tensorlistpushback_70_rnn_model_rnn_while_emptytensorlist_70"
      input: "SelectV2_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_70"
      }
    }
    node_def {
      name: "TensorListPushBack_71"
      op: "TensorListPushBack"
      input: "tensorlistpushback_71_rnn_model_rnn_while_emptytensorlist_71"
      input: "SelectV2_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_71"
      }
    }
    node_def {
      name: "TensorListPushBack_72"
      op: "TensorListPushBack"
      input: "tensorlistpushback_72_rnn_model_rnn_while_emptytensorlist_72"
      input: "SelectV2_4:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_72"
      }
    }
    node_def {
      name: "TensorListPushBack_73"
      op: "TensorListPushBack"
      input: "tensorlistpushback_73_rnn_model_rnn_while_emptytensorlist_73"
      input: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_73"
      }
    }
    node_def {
      name: "TensorListPushBack_74"
      op: "TensorListPushBack"
      input: "tensorlistpushback_74_rnn_model_rnn_while_emptytensorlist_74"
      input: "add_4/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_74"
      }
    }
    node_def {
      name: "TensorListPushBack_75"
      op: "TensorListPushBack"
      input: "tensorlistpushback_75_rnn_model_rnn_while_emptytensorlist_75"
      input: "add_4_0:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_75"
      }
    }
    node_def {
      name: "TensorListPushBack_76"
      op: "TensorListPushBack"
      input: "tensorlistpushback_76_rnn_model_rnn_while_emptytensorlist_76"
      input: "add_5/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_76"
      }
    }
    node_def {
      name: "TensorListPushBack_77"
      op: "TensorListPushBack"
      input: "tensorlistpushback_77_rnn_model_rnn_while_emptytensorlist_77"
      input: "add_5_0:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "TensorListPushBack_77"
      }
    }
    ret {
      key: "add_4"
      value: "add_4_0:z:0"
    }
    ret {
      key: "add_5"
      value: "add_5_0:z:0"
    }
    ret {
      key: "biasadd_1_readvariableop_rnn_model_rnn_bias_1"
      value: "biasadd_1_readvariableop_rnn_model_rnn_bias_1_0"
    }
    ret {
      key: "biasadd_readvariableop_rnn_model_rnn_bias"
      value: "biasadd_readvariableop_rnn_model_rnn_bias_0"
    }
    ret {
      key: "matmul_1_readvariableop_rnn_model_rnn_recurrent_kernel"
      value: "matmul_1_readvariableop_rnn_model_rnn_recurrent_kernel_0"
    }
    ret {
      key: "matmul_2_readvariableop_rnn_model_rnn_kernel_1"
      value: "matmul_2_readvariableop_rnn_model_rnn_kernel_1_0"
    }
    ret {
      key: "matmul_3_readvariableop_rnn_model_rnn_recurrent_kernel_1"
      value: "matmul_3_readvariableop_rnn_model_rnn_recurrent_kernel_1_0"
    }
    ret {
      key: "matmul_readvariableop_rnn_model_rnn_kernel"
      value: "matmul_readvariableop_rnn_model_rnn_kernel_0"
    }
    ret {
      key: "mul_4_rnn_model_rnn_dropout_4_mul_1"
      value: "mul_4_rnn_model_rnn_dropout_4_mul_1_0"
    }
    ret {
      key: "mul_rnn_model_rnn_dropout_mul_1"
      value: "mul_rnn_model_rnn_dropout_mul_1_0"
    }
    ret {
      key: "rnn_model_rnn_strided_slice_1"
      value: "rnn_model_rnn_strided_slice_1_0"
    }
    ret {
      key: "rnn_model_rnn_while_maximum_iterations"
      value: "rnn_model_rnn_while_maximum_iterations_0"
    }
    ret {
      key: "selectv2"
      value: "SelectV2:output:0"
    }
    ret {
      key: "selectv2_1"
      value: "SelectV2_1:output:0"
    }
    ret {
      key: "selectv2_2"
      value: "SelectV2_2:output:0"
    }
    ret {
      key: "selectv2_3"
      value: "SelectV2_3:output:0"
    }
    ret {
      key: "selectv2_4"
      value: "SelectV2_4:output:0"
    }
    ret {
      key: "tensorarrayv2read_1_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_1_tensorlistfromtensor"
      value: "tensorarrayv2read_1_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_1_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    ret {
      key: "tensorlistpushback"
      value: "TensorListPushBack:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_1"
      value: "TensorListPushBack_1:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_10"
      value: "TensorListPushBack_10:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_11"
      value: "TensorListPushBack_11:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_12"
      value: "TensorListPushBack_12:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_13"
      value: "TensorListPushBack_13:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_14"
      value: "TensorListPushBack_14:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_15"
      value: "TensorListPushBack_15:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_16"
      value: "TensorListPushBack_16:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_17"
      value: "TensorListPushBack_17:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_18"
      value: "TensorListPushBack_18:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_19"
      value: "TensorListPushBack_19:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_2"
      value: "TensorListPushBack_2:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_20"
      value: "TensorListPushBack_20:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_21"
      value: "TensorListPushBack_21:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_22"
      value: "TensorListPushBack_22:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_23"
      value: "TensorListPushBack_23:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_24"
      value: "TensorListPushBack_24:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_25"
      value: "TensorListPushBack_25:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_26"
      value: "TensorListPushBack_26:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_27"
      value: "TensorListPushBack_27:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_28"
      value: "TensorListPushBack_28:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_29"
      value: "TensorListPushBack_29:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_3"
      value: "TensorListPushBack_3:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_30"
      value: "TensorListPushBack_30:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_31"
      value: "TensorListPushBack_31:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_32"
      value: "TensorListPushBack_32:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_33"
      value: "TensorListPushBack_33:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_34"
      value: "TensorListPushBack_34:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_35"
      value: "TensorListPushBack_35:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_36"
      value: "TensorListPushBack_36:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_37"
      value: "TensorListPushBack_37:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_38"
      value: "TensorListPushBack_38:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_39"
      value: "TensorListPushBack_39:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_4"
      value: "TensorListPushBack_4:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_40"
      value: "TensorListPushBack_40:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_41"
      value: "TensorListPushBack_41:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_42"
      value: "TensorListPushBack_42:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_43"
      value: "TensorListPushBack_43:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_44"
      value: "TensorListPushBack_44:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_45"
      value: "TensorListPushBack_45:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_46"
      value: "TensorListPushBack_46:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_47"
      value: "TensorListPushBack_47:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_48"
      value: "TensorListPushBack_48:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_49"
      value: "TensorListPushBack_49:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_5"
      value: "TensorListPushBack_5:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_50"
      value: "TensorListPushBack_50:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_51"
      value: "TensorListPushBack_51:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_52"
      value: "TensorListPushBack_52:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_53"
      value: "TensorListPushBack_53:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_54"
      value: "TensorListPushBack_54:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_55"
      value: "TensorListPushBack_55:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_56"
      value: "TensorListPushBack_56:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_57"
      value: "TensorListPushBack_57:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_58"
      value: "TensorListPushBack_58:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_59"
      value: "TensorListPushBack_59:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_6"
      value: "TensorListPushBack_6:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_60"
      value: "TensorListPushBack_60:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_61"
      value: "TensorListPushBack_61:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_62"
      value: "TensorListPushBack_62:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_63"
      value: "TensorListPushBack_63:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_64"
      value: "TensorListPushBack_64:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_65"
      value: "TensorListPushBack_65:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_66"
      value: "TensorListPushBack_66:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_67"
      value: "TensorListPushBack_67:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_68"
      value: "TensorListPushBack_68:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_69"
      value: "TensorListPushBack_69:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_7"
      value: "TensorListPushBack_7:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_70"
      value: "TensorListPushBack_70:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_71"
      value: "TensorListPushBack_71:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_72"
      value: "TensorListPushBack_72:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_73"
      value: "TensorListPushBack_73:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_74"
      value: "TensorListPushBack_74:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_75"
      value: "TensorListPushBack_75:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_76"
      value: "TensorListPushBack_76:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_77"
      value: "TensorListPushBack_77:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_8"
      value: "TensorListPushBack_8:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_9"
      value: "TensorListPushBack_9:output_handle:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 7
            }
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_1_Assert_AssertGuard_false_7705"
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_1_all"
        type: DT_BOOL
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
        type: DT_INT64
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_cmmc_max_sequence_length"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Condition x == y did not hold element-wise:"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_0"
      }
    }
    node_def {
      name: "Assert/data_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_1"
      }
    }
    node_def {
      name: "Assert/data_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "y (rnn_model/sequence_input_layer/sequence_features/cmmc_max/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_3"
      }
    }
    node_def {
      name: "Assert"
      op: "Assert"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_1_all"
      input: "Assert/data_0:output:0"
      input: "Assert/data_1:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
      input: "Assert/data_3:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_cmmc_max_sequence_length"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
            type: DT_INT64
            type: DT_STRING
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
      experimental_debug_info {
        original_node_names: "Assert"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_1_all"
      input: "^Assert"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "Assert/data_0:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "Assert/data_1:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "Assert/data_3:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_5_Assert_AssertGuard_true_7774"
      input_arg {
        name: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_5_all"
        type: DT_BOOL
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalnone"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_2"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      experimental_debug_info {
        original_node_names: "NoOp"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_5_all"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalNone"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone"
      }
    }
    node_def {
      name: "OptionalNone_1"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_1"
      }
    }
    node_def {
      name: "OptionalNone_2"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalnone"
      value: "OptionalNone:optional:0"
    }
    ret {
      key: "optionalnone_1"
      value: "OptionalNone_1:optional:0"
    }
    ret {
      key: "optionalnone_2"
      value: "OptionalNone_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_3_Assert_AssertGuard_false_7740"
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_3_all"
        type: DT_BOOL
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
        type: DT_INT64
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_ohlc_close_sequence_length"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Condition x == y did not hold element-wise:"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_0"
      }
    }
    node_def {
      name: "Assert/data_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_1"
      }
    }
    node_def {
      name: "Assert/data_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "y (rnn_model/sequence_input_layer/sequence_features/ohlc_close/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_3"
      }
    }
    node_def {
      name: "Assert"
      op: "Assert"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_3_all"
      input: "Assert/data_0:output:0"
      input: "Assert/data_1:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
      input: "Assert/data_3:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_ohlc_close_sequence_length"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
            type: DT_INT64
            type: DT_STRING
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
      experimental_debug_info {
        original_node_names: "Assert"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_3_all"
      input: "^Assert"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "Assert/data_0:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "Assert/data_1:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "Assert/data_3:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_rnn_while_body_8245_grad_9262"
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_2"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_6"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_7"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_8"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_11"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_12"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_13"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_14"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_15"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_16"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_17"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_18"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_tensorarrayv2write_tensorlistsetitem_grad_zeros_like_selectv2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_1_grad_selectv2_tile_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_1_grad_shape_mul_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_1_grad_shape_1_selectv2_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_1_grad_shape_2_placeholder_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_2_grad_selectv2_tile_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_2_grad_shape_add_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_2_grad_shape_1_selectv2_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_2_grad_shape_2_placeholder_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_3_grad_selectv2_tile_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_3_grad_shape_mul_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_3_grad_shape_1_selectv2_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_3_grad_shape_2_placeholder_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_4_grad_selectv2_tile_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_4_grad_shape_add_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_4_grad_shape_1_selectv2_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_4_grad_shape_2_placeholder_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_grad_selectv2_tile"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_selectv2_grad_shape_2_placeholder_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_7_grad_shape_sigmoid_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_7_grad_shape_1_tanh_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_add_3_grad_shape_mul_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_add_3_grad_shape_1_mul_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_5_grad_shape_sigmoid_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_6_grad_shape_sigmoid_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_6_grad_shape_1_tanh_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_add_2_grad_shape_matmul_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_add_2_grad_shape_1_matmul_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_matmul_2_grad_matmul_matmul_2_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_matmul_2_grad_matmul_1_mul_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_matmul_3_grad_matmul_matmul_3_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_4_grad_shape_1_mul_4_rnn_model_rnn_dropout_4_mul_1_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_mul_3_grad_shape_sigmoid_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_3_grad_shape_1_tanh_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_add_1_grad_shape_mul_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_add_1_grad_shape_1_mul_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_1_grad_shape_sigmoid_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_2_grad_shape_sigmoid"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_2_grad_shape_1_tanh"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_add_grad_shape_matmul"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_add_grad_shape_1_matmul_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_matmul_grad_matmul_matmul_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_matmul_grad_matmul_1_mul"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_matmul_1_grad_matmul_matmul_1_readvariableop"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_grad_shape_tensorarrayv2read_tensorlistgetitem"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_mul_grad_shape_1_mul_rnn_model_rnn_dropout_mul_1_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_tensorarrayv2read_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_INT32
      }
      output_arg {
        name: "identity_1"
        type: DT_INT32
      }
      output_arg {
        name: "identity_2"
        type: DT_INT32
      }
      output_arg {
        name: "identity_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_6"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_7"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_8"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_9"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_10"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_11"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_12"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_13"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_14"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_15"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_16"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_17"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_18"
        type: DT_FLOAT
      }
      output_arg {
        name: "gradients_tensorarrayv2write_tensorlistsetitem_grad_zeros_like_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_1_grad_selectv2_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_1_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_1_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_1_grad_shape_2_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_2_grad_selectv2_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_2_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_2_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_2_grad_shape_2_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_3_grad_selectv2_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_3_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_3_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_3_grad_shape_2_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_4_grad_selectv2_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_4_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_4_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_4_grad_shape_2_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_grad_selectv2_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_selectv2_grad_shape_2_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_7_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_7_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_add_3_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_add_3_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_5_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_6_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_6_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_add_2_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_add_2_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_matmul_2_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_matmul_2_grad_matmul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_matmul_3_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_4_grad_shape_1_mul_4_rnn_model_rnn_dropout_4_mul_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "gradients_mul_3_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_3_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_add_1_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_add_1_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_1_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_2_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_2_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_add_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_add_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_matmul_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_matmul_grad_matmul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_matmul_1_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_mul_grad_shape_1_mul_rnn_model_rnn_dropout_mul_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_tensorarrayv2read_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "placeholder_3"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_0"
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "placeholder_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_1"
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "placeholder_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_2"
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "placeholder_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_3"
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "placeholder_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_4"
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "placeholder_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_5"
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "placeholder_9"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_6"
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "placeholder_10"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_7"
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "placeholder_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_8"
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "placeholder_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_9"
      }
    }
    node_def {
      name: "gradients/grad_ys_10"
      op: "Identity"
      input: "placeholder_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_10"
      }
    }
    node_def {
      name: "gradients/grad_ys_11"
      op: "Identity"
      input: "placeholder_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_11"
      }
    }
    node_def {
      name: "gradients/grad_ys_12"
      op: "Identity"
      input: "placeholder_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_12"
      }
    }
    node_def {
      name: "gradients/grad_ys_13"
      op: "Identity"
      input: "placeholder_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_13"
      }
    }
    node_def {
      name: "gradients/grad_ys_14"
      op: "Identity"
      input: "placeholder_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_14"
      }
    }
    node_def {
      name: "gradients/grad_ys_15"
      op: "Identity"
      input: "placeholder_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/grad_ys_15"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2write_tensorlistsetitem_grad_zeros_like_selectv2"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_placeholder"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem"
      op: "TensorListSetItem"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:tensor:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/Shape"
      op: "Shape"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Write/TensorListSetItem_grad/Shape"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListGetItem"
      op: "TensorListGetItem"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:tensor:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/Shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListGetItem"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/zeros"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/SelectV2/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/SelectV2/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/SelectV2/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_1_grad_selectv2_tile_1"
      input: "gradients/SelectV2_1_grad/SelectV2/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/SelectV2/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/SelectV2_1_grad/SelectV2/TensorListPopBack:tensor:0"
      input: "gradients/grad_ys_2:output:0"
      input: "gradients/SelectV2_1_grad/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/SelectV2"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_1_grad_shape_mul_3"
      input: "gradients/SelectV2_1_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Shape"
      op: "Shape"
      input: "gradients/SelectV2_1_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_1_grad_shape_1_selectv2_1"
      input: "gradients/SelectV2_1_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Shape_1"
      op: "Shape"
      input: "gradients/SelectV2_1_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/SelectV2_1_grad/Shape:output:0"
      input: "gradients/SelectV2_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Sum"
      op: "Sum"
      input: "gradients/SelectV2_1_grad/SelectV2:output:0"
      input: "gradients/SelectV2_1_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Sum"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/SelectV2_1_grad/Sum:output:0"
      input: "gradients/SelectV2_1_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/SelectV2_1_grad/SelectV2/TensorListPopBack:tensor:0"
      input: "gradients/SelectV2_1_grad/zeros:output:0"
      input: "gradients/grad_ys_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/SelectV2_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Shape_2/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Shape_2/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Shape_2/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_1_grad_shape_2_placeholder_3"
      input: "gradients/SelectV2_1_grad/Shape_2/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Shape_2/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Shape_2"
      op: "Shape"
      input: "gradients/SelectV2_1_grad/Shape_2/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Shape_2"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/BroadcastGradientArgs_1"
      op: "BroadcastGradientArgs"
      input: "gradients/SelectV2_1_grad/Shape_2:output:0"
      input: "gradients/SelectV2_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/BroadcastGradientArgs_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/SelectV2_1_grad/SelectV2_1:output:0"
      input: "gradients/SelectV2_1_grad/BroadcastGradientArgs_1:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/SelectV2_1_grad/Sum_1:output:0"
      input: "gradients/SelectV2_1_grad/Shape_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_1_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/zeros"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/SelectV2/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/SelectV2/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/SelectV2/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_2_grad_selectv2_tile_2"
      input: "gradients/SelectV2_2_grad/SelectV2/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/SelectV2/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/SelectV2_2_grad/SelectV2/TensorListPopBack:tensor:0"
      input: "gradients/grad_ys_3:output:0"
      input: "gradients/SelectV2_2_grad/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/SelectV2"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_2_grad_shape_add_1"
      input: "gradients/SelectV2_2_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Shape"
      op: "Shape"
      input: "gradients/SelectV2_2_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_2_grad_shape_1_selectv2_2"
      input: "gradients/SelectV2_2_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Shape_1"
      op: "Shape"
      input: "gradients/SelectV2_2_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/SelectV2_2_grad/Shape:output:0"
      input: "gradients/SelectV2_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Sum"
      op: "Sum"
      input: "gradients/SelectV2_2_grad/SelectV2:output:0"
      input: "gradients/SelectV2_2_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Sum"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/SelectV2_2_grad/Sum:output:0"
      input: "gradients/SelectV2_2_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/SelectV2_2_grad/SelectV2/TensorListPopBack:tensor:0"
      input: "gradients/SelectV2_2_grad/zeros:output:0"
      input: "gradients/grad_ys_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/SelectV2_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Shape_2/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Shape_2/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Shape_2/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_2_grad_shape_2_placeholder_4"
      input: "gradients/SelectV2_2_grad/Shape_2/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Shape_2/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Shape_2"
      op: "Shape"
      input: "gradients/SelectV2_2_grad/Shape_2/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Shape_2"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/BroadcastGradientArgs_1"
      op: "BroadcastGradientArgs"
      input: "gradients/SelectV2_2_grad/Shape_2:output:0"
      input: "gradients/SelectV2_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/BroadcastGradientArgs_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/SelectV2_2_grad/SelectV2_1:output:0"
      input: "gradients/SelectV2_2_grad/BroadcastGradientArgs_1:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/SelectV2_2_grad/Sum_1:output:0"
      input: "gradients/SelectV2_2_grad/Shape_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_2_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/zeros"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/SelectV2/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/SelectV2/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/SelectV2/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_3_grad_selectv2_tile_3"
      input: "gradients/SelectV2_3_grad/SelectV2/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/SelectV2/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/SelectV2_3_grad/SelectV2/TensorListPopBack:tensor:0"
      input: "gradients/grad_ys_4:output:0"
      input: "gradients/SelectV2_3_grad/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/SelectV2"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_3_grad_shape_mul_7"
      input: "gradients/SelectV2_3_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Shape"
      op: "Shape"
      input: "gradients/SelectV2_3_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_3_grad_shape_1_selectv2_3"
      input: "gradients/SelectV2_3_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Shape_1"
      op: "Shape"
      input: "gradients/SelectV2_3_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/SelectV2_3_grad/Shape:output:0"
      input: "gradients/SelectV2_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Sum"
      op: "Sum"
      input: "gradients/SelectV2_3_grad/SelectV2:output:0"
      input: "gradients/SelectV2_3_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Sum"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/SelectV2_3_grad/Sum:output:0"
      input: "gradients/SelectV2_3_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/SelectV2_3_grad/SelectV2/TensorListPopBack:tensor:0"
      input: "gradients/SelectV2_3_grad/zeros:output:0"
      input: "gradients/grad_ys_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/SelectV2_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Shape_2/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Shape_2/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Shape_2/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_3_grad_shape_2_placeholder_5"
      input: "gradients/SelectV2_3_grad/Shape_2/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Shape_2/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Shape_2"
      op: "Shape"
      input: "gradients/SelectV2_3_grad/Shape_2/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Shape_2"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/BroadcastGradientArgs_1"
      op: "BroadcastGradientArgs"
      input: "gradients/SelectV2_3_grad/Shape_2:output:0"
      input: "gradients/SelectV2_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/BroadcastGradientArgs_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/SelectV2_3_grad/SelectV2_1:output:0"
      input: "gradients/SelectV2_3_grad/BroadcastGradientArgs_1:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/SelectV2_3_grad/Sum_1:output:0"
      input: "gradients/SelectV2_3_grad/Shape_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_3_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/zeros"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/SelectV2/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/SelectV2/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/SelectV2/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_4_grad_selectv2_tile_4"
      input: "gradients/SelectV2_4_grad/SelectV2/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/SelectV2/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/SelectV2_4_grad/SelectV2/TensorListPopBack:tensor:0"
      input: "gradients/grad_ys_5:output:0"
      input: "gradients/SelectV2_4_grad/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/SelectV2"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_4_grad_shape_add_3"
      input: "gradients/SelectV2_4_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Shape"
      op: "Shape"
      input: "gradients/SelectV2_4_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_4_grad_shape_1_selectv2_4"
      input: "gradients/SelectV2_4_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Shape_1"
      op: "Shape"
      input: "gradients/SelectV2_4_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/SelectV2_4_grad/Shape:output:0"
      input: "gradients/SelectV2_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Sum"
      op: "Sum"
      input: "gradients/SelectV2_4_grad/SelectV2:output:0"
      input: "gradients/SelectV2_4_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Sum"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/SelectV2_4_grad/Sum:output:0"
      input: "gradients/SelectV2_4_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/SelectV2_4_grad/SelectV2/TensorListPopBack:tensor:0"
      input: "gradients/SelectV2_4_grad/zeros:output:0"
      input: "gradients/grad_ys_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/SelectV2_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Shape_2/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Shape_2/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Shape_2/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_4_grad_shape_2_placeholder_6"
      input: "gradients/SelectV2_4_grad/Shape_2/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Shape_2/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Shape_2"
      op: "Shape"
      input: "gradients/SelectV2_4_grad/Shape_2/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Shape_2"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/BroadcastGradientArgs_1"
      op: "BroadcastGradientArgs"
      input: "gradients/SelectV2_4_grad/Shape_2:output:0"
      input: "gradients/SelectV2_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/BroadcastGradientArgs_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/SelectV2_4_grad/SelectV2_1:output:0"
      input: "gradients/SelectV2_4_grad/BroadcastGradientArgs_1:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/SelectV2_4_grad/Sum_1:output:0"
      input: "gradients/SelectV2_4_grad/Shape_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_4_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/grad_ys_1:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListGetItem:item:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/zeros"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/SelectV2/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/SelectV2/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/SelectV2/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_grad_selectv2_tile"
      input: "gradients/SelectV2_grad/SelectV2/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_BOOL
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/SelectV2/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/SelectV2_grad/SelectV2/TensorListPopBack:tensor:0"
      input: "gradients/AddN:sum:0"
      input: "gradients/SelectV2_grad/zeros:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/SelectV2"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/Shape"
      op: "Shape"
      input: "gradients/SelectV2_3_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/Shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/Shape_1"
      op: "Shape"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/SelectV2_grad/Shape:output:0"
      input: "gradients/SelectV2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/Sum"
      op: "Sum"
      input: "gradients/SelectV2_grad/SelectV2:output:0"
      input: "gradients/SelectV2_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/Sum"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/Reshape"
      op: "Reshape"
      input: "gradients/SelectV2_grad/Sum:output:0"
      input: "gradients/SelectV2_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/SelectV2_grad/SelectV2/TensorListPopBack:tensor:0"
      input: "gradients/SelectV2_grad/zeros:output:0"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/SelectV2_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/Shape_2/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/Shape_2/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/Shape_2/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_selectv2_grad_shape_2_placeholder_2"
      input: "gradients/SelectV2_grad/Shape_2/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/Shape_2/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/Shape_2"
      op: "Shape"
      input: "gradients/SelectV2_grad/Shape_2/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/Shape_2"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/BroadcastGradientArgs_1"
      op: "BroadcastGradientArgs"
      input: "gradients/SelectV2_grad/Shape_2:output:0"
      input: "gradients/SelectV2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/BroadcastGradientArgs_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/Sum_1"
      op: "Sum"
      input: "gradients/SelectV2_grad/SelectV2_1:output:0"
      input: "gradients/SelectV2_grad/BroadcastGradientArgs_1:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/SelectV2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/SelectV2_grad/Sum_1:output:0"
      input: "gradients/SelectV2_grad/Shape_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/SelectV2_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/SelectV2_3_grad/Reshape:output:0"
      input: "gradients/SelectV2_grad/Reshape:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/SelectV2_3_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_1"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_mul_7_grad_shape_sigmoid_5"
      input: "gradients/mul_7_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Shape"
      op: "Shape"
      input: "gradients/mul_7_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Shape"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_mul_7_grad_shape_1_tanh_3"
      input: "gradients/mul_7_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Shape_1"
      op: "Shape"
      input: "gradients/mul_7_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/mul_7_grad/Shape:output:0"
      input: "gradients/mul_7_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Mul"
      op: "Mul"
      input: "gradients/AddN_1:sum:0"
      input: "gradients/mul_7_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Mul"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Sum"
      op: "Sum"
      input: "gradients/mul_7_grad/Mul:z:0"
      input: "gradients/mul_7_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Sum"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/mul_7_grad/Sum:output:0"
      input: "gradients/mul_7_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Mul_1"
      op: "Mul"
      input: "gradients/mul_7_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/AddN_1:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Mul_1"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/mul_7_grad/Mul_1:z:0"
      input: "gradients/mul_7_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/mul_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/mul_7_grad/Sum_1:output:0"
      input: "gradients/mul_7_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_7_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/Sigmoid_5_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/mul_7_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/mul_7_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/Sigmoid_5_grad/SigmoidGrad"
      }
    }
    node_def {
      name: "gradients/Tanh_3_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/mul_7_grad/Shape_1/TensorListPopBack:tensor:0"
      input: "gradients/mul_7_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/Tanh_3_grad/TanhGrad"
      }
    }
    node_def {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/SelectV2_4_grad/Reshape:output:0"
      input: "gradients/Tanh_3_grad/TanhGrad:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/SelectV2_4_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_2"
      }
    }
    node_def {
      name: "gradients/add_3_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_3_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/add_3_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_add_3_grad_shape_mul_5"
      input: "gradients/add_3_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_3_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/add_3_grad/Shape"
      op: "Shape"
      input: "gradients/add_3_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_3_grad/Shape"
      }
    }
    node_def {
      name: "gradients/add_3_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_3_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/add_3_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_add_3_grad_shape_1_mul_6"
      input: "gradients/add_3_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_3_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/add_3_grad/Shape_1"
      op: "Shape"
      input: "gradients/add_3_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_3_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/add_3_grad/Shape:output:0"
      input: "gradients/add_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_3_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_2:sum:0"
      input: "gradients/add_3_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_3_grad/Sum"
      }
    }
    node_def {
      name: "gradients/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/add_3_grad/Sum:output:0"
      input: "gradients/add_3_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_3_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_2:sum:0"
      input: "gradients/add_3_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_3_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/add_3_grad/Sum_1:output:0"
      input: "gradients/add_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_3_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/mul_5_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_5_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/mul_5_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_mul_5_grad_shape_sigmoid_4"
      input: "gradients/mul_5_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_5_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/mul_5_grad/Shape"
      op: "Shape"
      input: "gradients/mul_5_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_5_grad/Shape"
      }
    }
    node_def {
      name: "gradients/mul_5_grad/Shape_1"
      op: "Shape"
      input: "gradients/SelectV2_4_grad/Shape_2/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_5_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/mul_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/mul_5_grad/Shape:output:0"
      input: "gradients/mul_5_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_5_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/mul_5_grad/Mul"
      op: "Mul"
      input: "gradients/add_3_grad/Reshape:output:0"
      input: "gradients/SelectV2_4_grad/Shape_2/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_5_grad/Mul"
      }
    }
    node_def {
      name: "gradients/mul_5_grad/Sum"
      op: "Sum"
      input: "gradients/mul_5_grad/Mul:z:0"
      input: "gradients/mul_5_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_5_grad/Sum"
      }
    }
    node_def {
      name: "gradients/mul_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/mul_5_grad/Sum:output:0"
      input: "gradients/mul_5_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_5_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/mul_5_grad/Mul_1"
      op: "Mul"
      input: "gradients/mul_5_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/add_3_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_5_grad/Mul_1"
      }
    }
    node_def {
      name: "gradients/mul_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/mul_5_grad/Mul_1:z:0"
      input: "gradients/mul_5_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_5_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/mul_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/mul_5_grad/Sum_1:output:0"
      input: "gradients/mul_5_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_5_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_mul_6_grad_shape_sigmoid_3"
      input: "gradients/mul_6_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Shape"
      op: "Shape"
      input: "gradients/mul_6_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Shape"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_mul_6_grad_shape_1_tanh_2"
      input: "gradients/mul_6_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Shape_1"
      op: "Shape"
      input: "gradients/mul_6_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/mul_6_grad/Shape:output:0"
      input: "gradients/mul_6_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Mul"
      op: "Mul"
      input: "gradients/add_3_grad/Reshape_1:output:0"
      input: "gradients/mul_6_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Mul"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Sum"
      op: "Sum"
      input: "gradients/mul_6_grad/Mul:z:0"
      input: "gradients/mul_6_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Sum"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Reshape"
      op: "Reshape"
      input: "gradients/mul_6_grad/Sum:output:0"
      input: "gradients/mul_6_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Mul_1"
      op: "Mul"
      input: "gradients/mul_6_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/add_3_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Mul_1"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Sum_1"
      op: "Sum"
      input: "gradients/mul_6_grad/Mul_1:z:0"
      input: "gradients/mul_6_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/mul_6_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/mul_6_grad/Sum_1:output:0"
      input: "gradients/mul_6_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_6_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/Sigmoid_4_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/mul_5_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/mul_5_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/Sigmoid_4_grad/SigmoidGrad"
      }
    }
    node_def {
      name: "gradients/AddN_3"
      op: "AddN"
      input: "gradients/SelectV2_4_grad/Reshape_1:output:0"
      input: "gradients/mul_5_grad/Reshape_1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/SelectV2_4_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_3"
      }
    }
    node_def {
      name: "gradients/Sigmoid_3_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/mul_6_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/mul_6_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/Sigmoid_3_grad/SigmoidGrad"
      }
    }
    node_def {
      name: "gradients/Tanh_2_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/mul_6_grad/Shape_1/TensorListPopBack:tensor:0"
      input: "gradients/mul_6_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/Tanh_2_grad/TanhGrad"
      }
    }
    node_def {
      name: "gradients/split_1_grad/concat/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/split_1_grad/concat/Const"
      }
    }
    node_def {
      name: "gradients/split_1_grad/concat"
      op: "ConcatV2"
      input: "gradients/Sigmoid_3_grad/SigmoidGrad:z:0"
      input: "gradients/Sigmoid_4_grad/SigmoidGrad:z:0"
      input: "gradients/Tanh_2_grad/TanhGrad:z:0"
      input: "gradients/Sigmoid_5_grad/SigmoidGrad:z:0"
      input: "gradients/split_1_grad/concat/Const:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/split_1_grad/concat"
      }
    }
    node_def {
      name: "gradients/BiasAdd_1_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/split_1_grad/concat:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/BiasAdd_1_grad/BiasAddGrad"
      }
    }
    node_def {
      name: "gradients/add_2_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_2_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/add_2_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_add_2_grad_shape_matmul_2"
      input: "gradients/add_2_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_2_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/add_2_grad/Shape"
      op: "Shape"
      input: "gradients/add_2_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_2_grad/Shape"
      }
    }
    node_def {
      name: "gradients/add_2_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_2_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/add_2_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_add_2_grad_shape_1_matmul_3"
      input: "gradients/add_2_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_2_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/add_2_grad/Shape_1"
      op: "Shape"
      input: "gradients/add_2_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_2_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/add_2_grad/Shape:output:0"
      input: "gradients/add_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_2_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/split_1_grad/concat:output:0"
      input: "gradients/add_2_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_2_grad/Sum"
      }
    }
    node_def {
      name: "gradients/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/add_2_grad/Sum:output:0"
      input: "gradients/add_2_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_2_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/split_1_grad/concat:output:0"
      input: "gradients/add_2_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_2_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/add_2_grad/Sum_1:output:0"
      input: "gradients/add_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_2_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/MatMul_2_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_2_grad/MatMul/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/MatMul_2_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_matmul_2_grad_matmul_matmul_2_readvariableop"
      input: "gradients/MatMul_2_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 10
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_2_grad/MatMul/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/MatMul_2_grad/MatMul"
      op: "MatMul"
      input: "gradients/add_2_grad/Reshape:output:0"
      input: "gradients/MatMul_2_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_2_grad/MatMul"
      }
    }
    node_def {
      name: "gradients/MatMul_2_grad/MatMul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_2_grad/MatMul_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/MatMul_2_grad/MatMul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_matmul_2_grad_matmul_1_mul_4"
      input: "gradients/MatMul_2_grad/MatMul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_2_grad/MatMul_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/MatMul_2_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/MatMul_2_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/add_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_2_grad/MatMul_1"
      }
    }
    node_def {
      name: "gradients/MatMul_3_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_3_grad/MatMul/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/MatMul_3_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_matmul_3_grad_matmul_matmul_3_readvariableop"
      input: "gradients/MatMul_3_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 5
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_3_grad/MatMul/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/MatMul_3_grad/MatMul"
      op: "MatMul"
      input: "gradients/add_2_grad/Reshape_1:output:0"
      input: "gradients/MatMul_3_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_3_grad/MatMul"
      }
    }
    node_def {
      name: "gradients/MatMul_3_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/SelectV2_3_grad/Shape_2/TensorListPopBack:tensor:0"
      input: "gradients/add_2_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_3_grad/MatMul_1"
      }
    }
    node_def {
      name: "gradients/AddN_4"
      op: "AddN"
      input: "gradients/grad_ys_15:output:0"
      input: "gradients/BiasAdd_1_grad/BiasAddGrad:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_15"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_4"
      }
    }
    node_def {
      name: "gradients/mul_4_grad/Shape"
      op: "Shape"
      input: "gradients/SelectV2_1_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_4_grad/Shape"
      }
    }
    node_def {
      name: "gradients/mul_4_grad/Shape_1"
      op: "Shape"
      input: "gradients_mul_4_grad_shape_1_mul_4_rnn_model_rnn_dropout_4_mul_1_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_4_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/mul_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/mul_4_grad/Shape:output:0"
      input: "gradients/mul_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_4_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/mul_4_grad/Mul"
      op: "Mul"
      input: "gradients/MatMul_2_grad/MatMul:product:0"
      input: "gradients_mul_4_grad_shape_1_mul_4_rnn_model_rnn_dropout_4_mul_1_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_4_grad/Mul"
      }
    }
    node_def {
      name: "gradients/mul_4_grad/Sum"
      op: "Sum"
      input: "gradients/mul_4_grad/Mul:z:0"
      input: "gradients/mul_4_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_4_grad/Sum"
      }
    }
    node_def {
      name: "gradients/mul_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/mul_4_grad/Sum:output:0"
      input: "gradients/mul_4_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_4_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/mul_4_grad/Mul_1"
      op: "Mul"
      input: "gradients/SelectV2_1_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/MatMul_2_grad/MatMul:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_4_grad/Mul_1"
      }
    }
    node_def {
      name: "gradients/mul_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/mul_4_grad/Mul_1:z:0"
      input: "gradients/mul_4_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_4_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/mul_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/mul_4_grad/Sum_1:output:0"
      input: "gradients/mul_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_4_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/AddN_5"
      op: "AddN"
      input: "gradients/SelectV2_3_grad/Reshape_1:output:0"
      input: "gradients/MatMul_3_grad/MatMul:product:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/SelectV2_3_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_5"
      }
    }
    node_def {
      name: "gradients/AddN_6"
      op: "AddN"
      input: "gradients/SelectV2_1_grad/Reshape:output:0"
      input: "gradients/mul_4_grad/Reshape:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/SelectV2_1_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_6"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_mul_3_grad_shape_sigmoid_2"
      input: "gradients/mul_3_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Shape"
      op: "Shape"
      input: "gradients/mul_3_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Shape"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_mul_3_grad_shape_1_tanh_1"
      input: "gradients/mul_3_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Shape_1"
      op: "Shape"
      input: "gradients/mul_3_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/mul_3_grad/Shape:output:0"
      input: "gradients/mul_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Mul"
      op: "Mul"
      input: "gradients/AddN_6:sum:0"
      input: "gradients/mul_3_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Mul"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/mul_3_grad/Mul:z:0"
      input: "gradients/mul_3_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Sum"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/mul_3_grad/Sum:output:0"
      input: "gradients/mul_3_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Mul_1"
      op: "Mul"
      input: "gradients/mul_3_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/AddN_6:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Mul_1"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/mul_3_grad/Mul_1:z:0"
      input: "gradients/mul_3_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/mul_3_grad/Sum_1:output:0"
      input: "gradients/mul_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_3_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/AddN_7"
      op: "AddN"
      input: "gradients/grad_ys_12:output:0"
      input: "gradients/mul_4_grad/Reshape_1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_12"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_7"
      }
    }
    node_def {
      name: "gradients/AddN_8"
      op: "AddN"
      input: "gradients/grad_ys_13:output:0"
      input: "gradients/MatMul_2_grad/MatMul_1:product:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_13"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_8"
      }
    }
    node_def {
      name: "gradients/AddN_9"
      op: "AddN"
      input: "gradients/grad_ys_14:output:0"
      input: "gradients/MatMul_3_grad/MatMul_1:product:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_14"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_9"
      }
    }
    node_def {
      name: "gradients/Sigmoid_2_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/mul_3_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/mul_3_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/Sigmoid_2_grad/SigmoidGrad"
      }
    }
    node_def {
      name: "gradients/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/mul_3_grad/Shape_1/TensorListPopBack:tensor:0"
      input: "gradients/mul_3_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/Tanh_1_grad/TanhGrad"
      }
    }
    node_def {
      name: "gradients/AddN_10"
      op: "AddN"
      input: "gradients/SelectV2_2_grad/Reshape:output:0"
      input: "gradients/Tanh_1_grad/TanhGrad:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/SelectV2_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_10"
      }
    }
    node_def {
      name: "gradients/add_1_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_1_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/add_1_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_add_1_grad_shape_mul_1"
      input: "gradients/add_1_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_1_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/add_1_grad/Shape"
      op: "Shape"
      input: "gradients/add_1_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_1_grad/Shape"
      }
    }
    node_def {
      name: "gradients/add_1_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_1_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/add_1_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_add_1_grad_shape_1_mul_2"
      input: "gradients/add_1_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_1_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/add_1_grad/Shape_1"
      op: "Shape"
      input: "gradients/add_1_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_1_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/add_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/add_1_grad/Shape:output:0"
      input: "gradients/add_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_1_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/add_1_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_10:sum:0"
      input: "gradients/add_1_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_1_grad/Sum"
      }
    }
    node_def {
      name: "gradients/add_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/add_1_grad/Sum:output:0"
      input: "gradients/add_1_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_1_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/add_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_10:sum:0"
      input: "gradients/add_1_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_1_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/add_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/add_1_grad/Sum_1:output:0"
      input: "gradients/add_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_1_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/mul_1_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_1_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/mul_1_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_mul_1_grad_shape_sigmoid_1"
      input: "gradients/mul_1_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_1_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/mul_1_grad/Shape"
      op: "Shape"
      input: "gradients/mul_1_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_1_grad/Shape"
      }
    }
    node_def {
      name: "gradients/mul_1_grad/Shape_1"
      op: "Shape"
      input: "gradients/SelectV2_2_grad/Shape_2/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_1_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/mul_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/mul_1_grad/Shape:output:0"
      input: "gradients/mul_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_1_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/mul_1_grad/Mul"
      op: "Mul"
      input: "gradients/add_1_grad/Reshape:output:0"
      input: "gradients/SelectV2_2_grad/Shape_2/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_1_grad/Mul"
      }
    }
    node_def {
      name: "gradients/mul_1_grad/Sum"
      op: "Sum"
      input: "gradients/mul_1_grad/Mul:z:0"
      input: "gradients/mul_1_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_1_grad/Sum"
      }
    }
    node_def {
      name: "gradients/mul_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/mul_1_grad/Sum:output:0"
      input: "gradients/mul_1_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_1_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/mul_1_grad/Mul_1"
      op: "Mul"
      input: "gradients/mul_1_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/add_1_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_1_grad/Mul_1"
      }
    }
    node_def {
      name: "gradients/mul_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/mul_1_grad/Mul_1:z:0"
      input: "gradients/mul_1_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_1_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/mul_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/mul_1_grad/Sum_1:output:0"
      input: "gradients/mul_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_1_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_mul_2_grad_shape_sigmoid"
      input: "gradients/mul_2_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Shape"
      op: "Shape"
      input: "gradients/mul_2_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Shape"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_mul_2_grad_shape_1_tanh"
      input: "gradients/mul_2_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Shape_1"
      op: "Shape"
      input: "gradients/mul_2_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/mul_2_grad/Shape:output:0"
      input: "gradients/mul_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/add_1_grad/Reshape_1:output:0"
      input: "gradients/mul_2_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Mul"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Sum"
      op: "Sum"
      input: "gradients/mul_2_grad/Mul:z:0"
      input: "gradients/mul_2_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Sum"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/mul_2_grad/Sum:output:0"
      input: "gradients/mul_2_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/mul_2_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/add_1_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Mul_1"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/mul_2_grad/Mul_1:z:0"
      input: "gradients/mul_2_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/mul_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/mul_2_grad/Sum_1:output:0"
      input: "gradients/mul_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_2_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/Sigmoid_1_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/mul_1_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/mul_1_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/Sigmoid_1_grad/SigmoidGrad"
      }
    }
    node_def {
      name: "gradients/AddN_11"
      op: "AddN"
      input: "gradients/SelectV2_2_grad/Reshape_1:output:0"
      input: "gradients/mul_1_grad/Reshape_1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/SelectV2_2_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_11"
      }
    }
    node_def {
      name: "gradients/Sigmoid_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/mul_2_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/mul_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/Sigmoid_grad/SigmoidGrad"
      }
    }
    node_def {
      name: "gradients/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/mul_2_grad/Shape_1/TensorListPopBack:tensor:0"
      input: "gradients/mul_2_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/Tanh_grad/TanhGrad"
      }
    }
    node_def {
      name: "gradients/split_grad/concat/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/split_grad/concat/Const"
      }
    }
    node_def {
      name: "gradients/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/Sigmoid_grad/SigmoidGrad:z:0"
      input: "gradients/Sigmoid_1_grad/SigmoidGrad:z:0"
      input: "gradients/Tanh_grad/TanhGrad:z:0"
      input: "gradients/Sigmoid_2_grad/SigmoidGrad:z:0"
      input: "gradients/split_grad/concat/Const:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/split_grad/concat"
      }
    }
    node_def {
      name: "gradients/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/split_grad/concat:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/BiasAdd_grad/BiasAddGrad"
      }
    }
    node_def {
      name: "gradients/add_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/add_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_add_grad_shape_matmul"
      input: "gradients/add_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/add_grad/Shape"
      op: "Shape"
      input: "gradients/add_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_grad/Shape"
      }
    }
    node_def {
      name: "gradients/add_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_grad/Shape_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/add_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_add_grad_shape_1_matmul_1"
      input: "gradients/add_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_grad/Shape_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/add_grad/Shape_1"
      op: "Shape"
      input: "gradients/add_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/add_grad/Shape:output:0"
      input: "gradients/add_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/add_grad/Sum"
      op: "Sum"
      input: "gradients/split_grad/concat:output:0"
      input: "gradients/add_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_grad/Sum"
      }
    }
    node_def {
      name: "gradients/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/add_grad/Sum:output:0"
      input: "gradients/add_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/split_grad/concat:output:0"
      input: "gradients/add_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/add_grad/Sum_1:output:0"
      input: "gradients/add_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/add_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/MatMul_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_grad/MatMul/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/MatMul_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_matmul_grad_matmul_matmul_readvariableop"
      input: "gradients/MatMul_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 7
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_grad/MatMul/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/add_grad/Reshape:output:0"
      input: "gradients/MatMul_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_grad/MatMul"
      }
    }
    node_def {
      name: "gradients/MatMul_grad/MatMul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_grad/MatMul_1/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/MatMul_grad/MatMul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_matmul_grad_matmul_1_mul"
      input: "gradients/MatMul_grad/MatMul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_grad/MatMul_1/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/MatMul_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/add_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_grad/MatMul_1"
      }
    }
    node_def {
      name: "gradients/MatMul_1_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_1_grad/MatMul/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/MatMul_1_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_matmul_1_grad_matmul_matmul_1_readvariableop"
      input: "gradients/MatMul_1_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 10
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_1_grad/MatMul/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/MatMul_1_grad/MatMul"
      op: "MatMul"
      input: "gradients/add_grad/Reshape_1:output:0"
      input: "gradients/MatMul_1_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_1_grad/MatMul"
      }
    }
    node_def {
      name: "gradients/MatMul_1_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/SelectV2_1_grad/Shape_2/TensorListPopBack:tensor:0"
      input: "gradients/add_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/MatMul_1_grad/MatMul_1"
      }
    }
    node_def {
      name: "gradients/AddN_12"
      op: "AddN"
      input: "gradients/grad_ys_11:output:0"
      input: "gradients/BiasAdd_grad/BiasAddGrad:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_12"
      }
    }
    node_def {
      name: "gradients/mul_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_grad/Shape/TensorListPopBack/element_shape"
      }
    }
    node_def {
      name: "gradients/mul_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_mul_grad_shape_tensorarrayv2read_tensorlistgetitem"
      input: "gradients/mul_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_grad/Shape/TensorListPopBack"
      }
    }
    node_def {
      name: "gradients/mul_grad/Shape"
      op: "Shape"
      input: "gradients/mul_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_grad/Shape"
      }
    }
    node_def {
      name: "gradients/mul_grad/Shape_1"
      op: "Shape"
      input: "gradients_mul_grad_shape_1_mul_rnn_model_rnn_dropout_mul_1_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_grad/Shape_1"
      }
    }
    node_def {
      name: "gradients/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/mul_grad/Shape:output:0"
      input: "gradients/mul_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_grad/BroadcastGradientArgs"
      }
    }
    node_def {
      name: "gradients/mul_grad/Mul"
      op: "Mul"
      input: "gradients/MatMul_grad/MatMul:product:0"
      input: "gradients_mul_grad_shape_1_mul_rnn_model_rnn_dropout_mul_1_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_grad/Mul"
      }
    }
    node_def {
      name: "gradients/mul_grad/Sum"
      op: "Sum"
      input: "gradients/mul_grad/Mul:z:0"
      input: "gradients/mul_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_grad/Sum"
      }
    }
    node_def {
      name: "gradients/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/mul_grad/Sum:output:0"
      input: "gradients/mul_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_grad/Reshape"
      }
    }
    node_def {
      name: "gradients/mul_grad/Mul_1"
      op: "Mul"
      input: "gradients/mul_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/MatMul_grad/MatMul:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_grad/Mul_1"
      }
    }
    node_def {
      name: "gradients/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/mul_grad/Mul_1:z:0"
      input: "gradients/mul_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_grad/Sum_1"
      }
    }
    node_def {
      name: "gradients/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/mul_grad/Sum_1:output:0"
      input: "gradients/mul_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/mul_grad/Reshape_1"
      }
    }
    node_def {
      name: "gradients/AddN_13"
      op: "AddN"
      input: "gradients/SelectV2_1_grad/Reshape_1:output:0"
      input: "gradients/MatMul_1_grad/MatMul:product:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/SelectV2_1_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_13"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength"
      op: "TensorListLength"
      input: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_tensorarrayv2read_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_tensorlistfromtensor_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape"
      op: "TensorListElementShape"
      input: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_tensorarrayv2read_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_tensorlistfromtensor_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve"
      op: "TensorListReserve"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape:element_shape:0"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength:length:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve"
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem"
      op: "TensorListSetItem"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve:handle:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:tensor:0"
      input: "gradients/mul_grad/Reshape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem"
      }
    }
    node_def {
      name: "gradients/AddN_14"
      op: "AddN"
      input: "gradients/grad_ys_8:output:0"
      input: "gradients/mul_grad/Reshape_1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_14"
      }
    }
    node_def {
      name: "gradients/AddN_15"
      op: "AddN"
      input: "gradients/grad_ys_9:output:0"
      input: "gradients/MatMul_grad/MatMul_1:product:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_15"
      }
    }
    node_def {
      name: "gradients/AddN_16"
      op: "AddN"
      input: "gradients/grad_ys_10:output:0"
      input: "gradients/MatMul_1_grad/MatMul_1:product:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_16"
      }
    }
    node_def {
      name: "gradients/AddN_17"
      op: "AddN"
      input: "gradients/grad_ys_6:output:0"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem:output_handle:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "gradients/AddN_17"
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
      experimental_debug_info {
        original_node_names: "add/y"
      }
    }
    node_def {
      name: "add"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "add"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "add:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem:output_handle:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/SelectV2_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "gradients/AddN_13:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_5"
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "gradients/AddN_11:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_6"
      }
    }
    node_def {
      name: "Identity_7"
      op: "Identity"
      input: "gradients/AddN_5:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_7"
      }
    }
    node_def {
      name: "Identity_8"
      op: "Identity"
      input: "gradients/AddN_3:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 5
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_8"
      }
    }
    node_def {
      name: "Identity_9"
      op: "Identity"
      input: "gradients/AddN_17:sum:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_9"
      }
    }
    node_def {
      name: "Identity_10"
      op: "Identity"
      input: "gradients/grad_ys_7:output:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_10"
      }
    }
    node_def {
      name: "Identity_11"
      op: "Identity"
      input: "gradients/AddN_14:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_11"
      }
    }
    node_def {
      name: "Identity_12"
      op: "Identity"
      input: "gradients/AddN_15:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_12"
      }
    }
    node_def {
      name: "Identity_13"
      op: "Identity"
      input: "gradients/AddN_16:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_13"
      }
    }
    node_def {
      name: "Identity_14"
      op: "Identity"
      input: "gradients/AddN_12:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 40
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_14"
      }
    }
    node_def {
      name: "Identity_15"
      op: "Identity"
      input: "gradients/AddN_7:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_15"
      }
    }
    node_def {
      name: "Identity_16"
      op: "Identity"
      input: "gradients/AddN_8:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_16"
      }
    }
    node_def {
      name: "Identity_17"
      op: "Identity"
      input: "gradients/AddN_9:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_17"
      }
    }
    node_def {
      name: "Identity_18"
      op: "Identity"
      input: "gradients/AddN_4:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 20
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_18"
      }
    }
    ret {
      key: "gradients_add_1_grad_shape_1_tensorlistpopback"
      value: "gradients/add_1_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_add_1_grad_shape_tensorlistpopback"
      value: "gradients/add_1_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_add_2_grad_shape_1_tensorlistpopback"
      value: "gradients/add_2_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_add_2_grad_shape_tensorlistpopback"
      value: "gradients/add_2_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_add_3_grad_shape_1_tensorlistpopback"
      value: "gradients/add_3_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_add_3_grad_shape_tensorlistpopback"
      value: "gradients/add_3_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_add_grad_shape_1_tensorlistpopback"
      value: "gradients/add_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_add_grad_shape_tensorlistpopback"
      value: "gradients/add_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_matmul_1_grad_matmul_tensorlistpopback"
      value: "gradients/MatMul_1_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_matmul_2_grad_matmul_1_tensorlistpopback"
      value: "gradients/MatMul_2_grad/MatMul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_matmul_2_grad_matmul_tensorlistpopback"
      value: "gradients/MatMul_2_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_matmul_3_grad_matmul_tensorlistpopback"
      value: "gradients/MatMul_3_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_matmul_grad_matmul_1_tensorlistpopback"
      value: "gradients/MatMul_grad/MatMul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_matmul_grad_matmul_tensorlistpopback"
      value: "gradients/MatMul_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_mul_1_grad_shape_tensorlistpopback"
      value: "gradients/mul_1_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_mul_2_grad_shape_1_tensorlistpopback"
      value: "gradients/mul_2_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_mul_2_grad_shape_tensorlistpopback"
      value: "gradients/mul_2_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_mul_3_grad_shape_1_tensorlistpopback"
      value: "gradients/mul_3_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_mul_3_grad_shape_tensorlistpopback"
      value: "gradients/mul_3_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_mul_4_grad_shape_1_mul_4_rnn_model_rnn_dropout_4_mul_1"
      value: "gradients_mul_4_grad_shape_1_mul_4_rnn_model_rnn_dropout_4_mul_1_0"
    }
    ret {
      key: "gradients_mul_5_grad_shape_tensorlistpopback"
      value: "gradients/mul_5_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_mul_6_grad_shape_1_tensorlistpopback"
      value: "gradients/mul_6_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_mul_6_grad_shape_tensorlistpopback"
      value: "gradients/mul_6_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_mul_7_grad_shape_1_tensorlistpopback"
      value: "gradients/mul_7_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_mul_7_grad_shape_tensorlistpopback"
      value: "gradients/mul_7_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_mul_grad_shape_1_mul_rnn_model_rnn_dropout_mul_1"
      value: "gradients_mul_grad_shape_1_mul_rnn_model_rnn_dropout_mul_1_0"
    }
    ret {
      key: "gradients_mul_grad_shape_tensorlistpopback"
      value: "gradients/mul_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_1_grad_selectv2_tensorlistpopback"
      value: "gradients/SelectV2_1_grad/SelectV2/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_1_grad_shape_1_tensorlistpopback"
      value: "gradients/SelectV2_1_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_1_grad_shape_2_tensorlistpopback"
      value: "gradients/SelectV2_1_grad/Shape_2/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_1_grad_shape_tensorlistpopback"
      value: "gradients/SelectV2_1_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_2_grad_selectv2_tensorlistpopback"
      value: "gradients/SelectV2_2_grad/SelectV2/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_2_grad_shape_1_tensorlistpopback"
      value: "gradients/SelectV2_2_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_2_grad_shape_2_tensorlistpopback"
      value: "gradients/SelectV2_2_grad/Shape_2/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_2_grad_shape_tensorlistpopback"
      value: "gradients/SelectV2_2_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_3_grad_selectv2_tensorlistpopback"
      value: "gradients/SelectV2_3_grad/SelectV2/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_3_grad_shape_1_tensorlistpopback"
      value: "gradients/SelectV2_3_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_3_grad_shape_2_tensorlistpopback"
      value: "gradients/SelectV2_3_grad/Shape_2/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_3_grad_shape_tensorlistpopback"
      value: "gradients/SelectV2_3_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_4_grad_selectv2_tensorlistpopback"
      value: "gradients/SelectV2_4_grad/SelectV2/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_4_grad_shape_1_tensorlistpopback"
      value: "gradients/SelectV2_4_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_4_grad_shape_2_tensorlistpopback"
      value: "gradients/SelectV2_4_grad/Shape_2/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_4_grad_shape_tensorlistpopback"
      value: "gradients/SelectV2_4_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_grad_selectv2_tensorlistpopback"
      value: "gradients/SelectV2_grad/SelectV2/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_selectv2_grad_shape_2_tensorlistpopback"
      value: "gradients/SelectV2_grad/Shape_2/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_tensorarrayv2read_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_tensorlistfromtensor"
      value: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_tensorarrayv2read_tensorlistgetitem_rnn_model_rnn_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_tensorlistpopback"
      value: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2write_tensorlistsetitem_grad_zeros_like_tensorlistpopback"
      value: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_10"
      value: "Identity_10:output:0"
    }
    ret {
      key: "identity_11"
      value: "Identity_11:output:0"
    }
    ret {
      key: "identity_12"
      value: "Identity_12:output:0"
    }
    ret {
      key: "identity_13"
      value: "Identity_13:output:0"
    }
    ret {
      key: "identity_14"
      value: "Identity_14:output:0"
    }
    ret {
      key: "identity_15"
      value: "Identity_15:output:0"
    }
    ret {
      key: "identity_16"
      value: "Identity_16:output:0"
    }
    ret {
      key: "identity_17"
      value: "Identity_17:output:0"
    }
    ret {
      key: "identity_18"
      value: "Identity_18:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    ret {
      key: "identity_7"
      value: "Identity_7:output:0"
    }
    ret {
      key: "identity_8"
      value: "Identity_8:output:0"
    }
    ret {
      key: "identity_9"
      value: "Identity_9:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 7
            }
          }
          shape {
            dim {
              size: 7
            }
            dim {
              size: 40
            }
          }
          shape {
            dim {
              size: 10
            }
            dim {
              size: 40
            }
          }
          shape {
            dim {
              size: 40
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
            dim {
              size: 10
            }
            dim {
              size: 20
            }
          }
          shape {
            dim {
              size: 5
            }
            dim {
              size: 20
            }
          }
          shape {
            dim {
              size: 20
            }
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 7
            }
          }
          shape {
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_3_Assert_AssertGuard_true_7739"
      input_arg {
        name: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_3_all"
        type: DT_BOOL
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalnone"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_2"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      experimental_debug_info {
        original_node_names: "NoOp"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_3_all"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalNone"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone"
      }
    }
    node_def {
      name: "OptionalNone_1"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_1"
      }
    }
    node_def {
      name: "OptionalNone_2"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalnone"
      value: "OptionalNone:optional:0"
    }
    ret {
      key: "optionalnone_1"
      value: "OptionalNone_1:optional:0"
    }
    ret {
      key: "optionalnone_2"
      value: "OptionalNone_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_rnn_while_cond_8244_grad_9736"
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_2"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_6"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_7"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_8"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_11"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_12"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_13"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_14"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_15"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_16"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_17"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_18"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_37"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_38"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_46"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_47"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_51"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_55"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_56"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_64"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_65"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_66"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Less"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Less:z:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 7
            }
          }
          shape {
            dim {
              size: 7
            }
            dim {
              size: 40
            }
          }
          shape {
            dim {
              size: 10
            }
            dim {
              size: 40
            }
          }
          shape {
            dim {
              size: 40
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
            dim {
              size: 10
            }
            dim {
              size: 20
            }
          }
          shape {
            dim {
              size: 5
            }
            dim {
              size: 20
            }
          }
          shape {
            dim {
              size: 20
            }
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 7
            }
          }
          shape {
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_7_Assert_AssertGuard_false_7810"
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_7_all"
        type: DT_BOOL
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
        type: DT_INT64
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_ohlc_pcr_sequence_length"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Condition x == y did not hold element-wise:"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_0"
      }
    }
    node_def {
      name: "Assert/data_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_1"
      }
    }
    node_def {
      name: "Assert/data_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "y (rnn_model/sequence_input_layer/sequence_features/ohlc_pcr/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_3"
      }
    }
    node_def {
      name: "Assert"
      op: "Assert"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_7_all"
      input: "Assert/data_0:output:0"
      input: "Assert/data_1:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
      input: "Assert/data_3:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_ohlc_pcr_sequence_length"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
            type: DT_INT64
            type: DT_STRING
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
      experimental_debug_info {
        original_node_names: "Assert"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_7_all"
      input: "^Assert"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "Assert/data_0:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "Assert/data_1:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "Assert/data_3:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_11_Assert_AssertGuard_true_7879"
      input_arg {
        name: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_11_all"
        type: DT_BOOL
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalnone"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_2"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      experimental_debug_info {
        original_node_names: "NoOp"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_11_all"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalNone"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone"
      }
    }
    node_def {
      name: "OptionalNone_1"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_1"
      }
    }
    node_def {
      name: "OptionalNone_2"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalnone"
      value: "OptionalNone:optional:0"
    }
    ret {
      key: "optionalnone_1"
      value: "OptionalNone_1:optional:0"
    }
    ret {
      key: "optionalnone_2"
      value: "OptionalNone_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_rnn_while_cond_8244"
      input_arg {
        name: "rnn_model_rnn_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "rnn_model_rnn_while_maximum_iterations"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_6"
        type: DT_FLOAT
      }
      input_arg {
        name: "less_rnn_model_rnn_strided_slice_1"
        type: DT_INT32
      }
      input_arg {
        name: "rnn_model_rnn_while_cond_8244___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_cond_8244___redundant_placeholder1"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_cond_8244___redundant_placeholder2"
        type: DT_FLOAT
      }
      input_arg {
        name: "rnn_model_rnn_while_cond_8244___redundant_placeholder3"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_model_rnn_while_cond_8244___redundant_placeholder4"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_model_rnn_while_cond_8244___redundant_placeholder5"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_model_rnn_while_cond_8244___redundant_placeholder6"
        type: DT_FLOAT
      }
      input_arg {
        name: "rnn_model_rnn_while_cond_8244___redundant_placeholder7"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_model_rnn_while_cond_8244___redundant_placeholder8"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_model_rnn_while_cond_8244___redundant_placeholder9"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_37"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_38"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_46"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_47"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_51"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_55"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_56"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_64"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_65"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_66"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_67"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_68"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_69"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_70"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_71"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_72"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_73"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_74"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_75"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_76"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_model_rnn_while_emptytensorlist_77"
        type: DT_VARIANT
      }
      output_arg {
        name: "less"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "less_rnn_model_rnn_strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Less"
      }
    }
    ret {
      key: "less"
      value: "Less:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 5
            }
          }
          shape {
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_5_Assert_AssertGuard_false_7775"
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_5_all"
        type: DT_BOOL
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
        type: DT_INT64
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_ohlc_lsw_sequence_length"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Condition x == y did not hold element-wise:"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_0"
      }
    }
    node_def {
      name: "Assert/data_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_1"
      }
    }
    node_def {
      name: "Assert/data_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "y (rnn_model/sequence_input_layer/sequence_features/ohlc_lsw/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_3"
      }
    }
    node_def {
      name: "Assert"
      op: "Assert"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_5_all"
      input: "Assert/data_0:output:0"
      input: "Assert/data_1:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
      input: "Assert/data_3:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_ohlc_lsw_sequence_length"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
            type: DT_INT64
            type: DT_STRING
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
      experimental_debug_info {
        original_node_names: "Assert"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_5_all"
      input: "^Assert"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "Assert/data_0:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "Assert/data_1:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "Assert/data_3:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_false_7120"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "global_step_initializer_zeros_0"
        type: DT_INT64
      }
      output_arg {
        name: "global_step_initializer_zeros"
        type: DT_INT64
      }
    }
    ret {
      key: "global_step_initializer_zeros"
      value: "global_step_initializer_zeros_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
          shape {
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_9_Assert_AssertGuard_true_7844"
      input_arg {
        name: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_9_all"
        type: DT_BOOL
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalnone"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_2"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      experimental_debug_info {
        original_node_names: "NoOp"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_9_all"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalNone"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone"
      }
    }
    node_def {
      name: "OptionalNone_1"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_1"
      }
    }
    node_def {
      name: "OptionalNone_2"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalnone"
      value: "OptionalNone:optional:0"
    }
    ret {
      key: "optionalnone_1"
      value: "OptionalNone_1:optional:0"
    }
    ret {
      key: "optionalnone_2"
      value: "OptionalNone_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_tf_data_experimental_parallel_interleave_read_one_file_7146"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "TFRecordDataset"
    }
    node_def {
      name: "compression_type"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
      experimental_debug_info {
        original_node_names: "compression_type"
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
      experimental_debug_info {
        original_node_names: "buffer_size"
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "args_0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "TFRecordDataset"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "TFRecordDataset:handle:0"
      input: "^TFRecordDataset"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    control_ret {
      key: "TFRecordDataset"
      value: "TFRecordDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_map_parse_fn_7201"
      input_arg {
        name: "args_0"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_6"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_7"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/debug_name"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/debug_name"
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/context_sparse_keys"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/context_sparse_keys"
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/context_dense_keys"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/context_dense_keys"
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/context_ragged_keys"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/context_ragged_keys"
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_sparse_keys"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 7
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 7
              }
            }
            string_val: "bas_rq"
            string_val: "cmmc_max"
            string_val: "ohlc_close"
            string_val: "ohlc_lsw"
            string_val: "ohlc_pcr"
            string_val: "ohlc_usw"
            string_val: "vol_rq"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_sparse_keys"
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_dense_keys"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "ohlc_close_label"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_dense_keys"
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_ragged_keys"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_ragged_keys"
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_dense_missing_assumed_empty"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
              dim {
                size: 1
              }
            }
            bool_val: false
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_dense_missing_assumed_empty"
      }
    }
    node_def {
      name: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2"
      op: "ParseSequenceExampleV2"
      input: "args_0"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/debug_name:output:0"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/context_sparse_keys:output:0"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/context_dense_keys:output:0"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/context_ragged_keys:output:0"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_sparse_keys:output:0"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_dense_keys:output:0"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_ragged_keys:output:0"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2/feature_list_dense_missing_assumed_empty:output:0"
      attr {
        key: "Ncontext_sparse"
        value {
          i: 0
        }
      }
      attr {
        key: "Nfeature_list_dense"
        value {
          i: 1
        }
      }
      attr {
        key: "Nfeature_list_sparse"
        value {
          i: 7
        }
      }
      attr {
        key: "Tcontext_dense"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "context_dense_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "context_ragged_split_types"
        value {
          list {
          }
        }
      }
      attr {
        key: "context_ragged_value_types"
        value {
          list {
          }
        }
      }
      attr {
        key: "context_sparse_types"
        value {
          list {
          }
        }
      }
      attr {
        key: "feature_list_dense_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "feature_list_dense_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "feature_list_ragged_split_types"
        value {
          list {
          }
        }
      }
      attr {
        key: "feature_list_ragged_value_types"
        value {
          list {
          }
        }
      }
      attr {
        key: "feature_list_sparse_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      experimental_debug_info {
        original_node_names: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2"
      }
    }
    node_def {
      name: "SerializeSparse"
      op: "SerializeSparse"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_indices:0"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_values:0"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_shapes:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "SerializeSparse"
      }
    }
    node_def {
      name: "SerializeSparse_1"
      op: "SerializeSparse"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_indices:1"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_values:1"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_shapes:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "SerializeSparse_1"
      }
    }
    node_def {
      name: "SerializeSparse_2"
      op: "SerializeSparse"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_indices:2"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_values:2"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_shapes:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "SerializeSparse_2"
      }
    }
    node_def {
      name: "SerializeSparse_3"
      op: "SerializeSparse"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_indices:3"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_values:3"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_shapes:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "SerializeSparse_3"
      }
    }
    node_def {
      name: "SerializeSparse_4"
      op: "SerializeSparse"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_indices:4"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_values:4"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_shapes:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "SerializeSparse_4"
      }
    }
    node_def {
      name: "SerializeSparse_5"
      op: "SerializeSparse"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_indices:5"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_values:5"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_shapes:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "SerializeSparse_5"
      }
    }
    node_def {
      name: "SerializeSparse_6"
      op: "SerializeSparse"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_indices:6"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_values:6"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_sparse_shapes:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_VARIANT
        }
      }
      experimental_debug_info {
        original_node_names: "SerializeSparse_6"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "SerializeSparse:serialized_sparse:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "SerializeSparse_1:serialized_sparse:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_1"
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "SerializeSparse_2:serialized_sparse:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_2"
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "SerializeSparse_3:serialized_sparse:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_3"
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "SerializeSparse_4:serialized_sparse:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_4"
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "SerializeSparse_5:serialized_sparse:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_5"
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "SerializeSparse_6:serialized_sparse:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_6"
      }
    }
    node_def {
      name: "Identity_7"
      op: "Identity"
      input: "ParseSingleSequenceExample/ParseSequenceExample/ParseSequenceExampleV2:feature_list_dense_values:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity_7"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    ret {
      key: "identity_7"
      value: "Identity_7:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_11_Assert_AssertGuard_false_7880"
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_11_all"
        type: DT_BOOL
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
        type: DT_INT64
      }
      input_arg {
        name: "assert_rnn_model_sequence_input_layer_sequence_features_vol_rq_sequence_length"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalfromvalue"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalfromvalue_2"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Condition x == y did not hold element-wise:"
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_0"
      }
    }
    node_def {
      name: "Assert/data_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "x (rnn_model/sequence_input_layer/sequence_features/bas_rq/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_1"
      }
    }
    node_def {
      name: "Assert/data_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "y (rnn_model/sequence_input_layer/sequence_features/vol_rq/sequence_length:0) = "
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Assert/data_3"
      }
    }
    node_def {
      name: "Assert"
      op: "Assert"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_11_all"
      input: "Assert/data_0:output:0"
      input: "Assert/data_1:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_bas_rq_sequence_length"
      input: "Assert/data_3:output:0"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_vol_rq_sequence_length"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
            type: DT_INT64
            type: DT_STRING
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
      experimental_debug_info {
        original_node_names: "Assert"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "assert_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_11_all"
      input: "^Assert"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalFromValue"
      op: "OptionalFromValue"
      input: "Assert/data_0:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue"
      }
    }
    node_def {
      name: "OptionalFromValue_1"
      op: "OptionalFromValue"
      input: "Assert/data_1:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_1"
      }
    }
    node_def {
      name: "OptionalFromValue_2"
      op: "OptionalFromValue"
      input: "Assert/data_3:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalFromValue_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalfromvalue"
      value: "OptionalFromValue:optional:0"
    }
    ret {
      key: "optionalfromvalue_1"
      value: "OptionalFromValue_1:optional:0"
    }
    ret {
      key: "optionalfromvalue_2"
      value: "OptionalFromValue_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_7_Assert_AssertGuard_true_7809"
      input_arg {
        name: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_7_all"
        type: DT_BOOL
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalnone"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_2"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      experimental_debug_info {
        original_node_names: "NoOp"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_7_all"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalNone"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone"
      }
    }
    node_def {
      name: "OptionalNone_1"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_1"
      }
    }
    node_def {
      name: "OptionalNone_2"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalnone"
      value: "OptionalNone:optional:0"
    }
    ret {
      key: "optionalnone_1"
      value: "OptionalNone_1:optional:0"
    }
    ret {
      key: "optionalnone_2"
      value: "OptionalNone_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_1_Assert_AssertGuard_true_7704"
      input_arg {
        name: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_1_all"
        type: DT_BOOL
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      output_arg {
        name: "optionalnone"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "optionalnone_2"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
      experimental_debug_info {
        original_node_names: "NoOp"
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "identity_rnn_model_sequence_input_layer_sequence_features_assert_all_equal_assert_equal_1_all"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "Identity"
      }
    }
    node_def {
      name: "OptionalNone"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone"
      }
    }
    node_def {
      name: "OptionalNone_1"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_1"
      }
    }
    node_def {
      name: "OptionalNone_2"
      op: "OptionalNone"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      experimental_debug_info {
        original_node_names: "OptionalNone_2"
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "optionalnone"
      value: "OptionalNone:optional:0"
    }
    ret {
      key: "optionalnone_1"
      value: "OptionalNone_1:optional:0"
    }
    ret {
      key: "optionalnone_2"
      value: "OptionalNone_2:optional:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
  }
}
versions {
  producer: 175
  min_consumer: 12
}
